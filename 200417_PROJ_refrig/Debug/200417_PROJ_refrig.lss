
200417_PROJ_refrig.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00000d3c  00000dd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d3c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800142  00800142  00000e12  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e12  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000104b  00000000  00000000  00000f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b19  00000000  00000000  00001fa3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000785  00000000  00000000  00002abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  00003244  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c3  00000000  00000000  000033d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000069e  00000000  00000000  00003993  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00004031  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e3       	ldi	r30, 0x3C	; 60
  a0:	fd e0       	ldi	r31, 0x0D	; 13
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 34       	cpi	r26, 0x42	; 66
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e4       	ldi	r26, 0x42	; 66
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 35       	cpi	r26, 0x5C	; 92
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	3d d0       	rcall	.+122    	; 0x13e <main>
  c4:	39 c6       	rjmp	.+3186   	; 0xd38 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <UART1_transmit>:
		index = i - 1;
	}
	
	for(i = index; i >= 0; i--)		// 변환된 문자열을 역순으로 출력
	UART1_transmit(numString[i]);
  c8:	eb e9       	ldi	r30, 0x9B	; 155
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	90 81       	ld	r25, Z
  ce:	95 ff       	sbrs	r25, 5
  d0:	fd cf       	rjmp	.-6      	; 0xcc <UART1_transmit+0x4>
  d2:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
  d6:	08 95       	ret

000000d8 <UART1_receive>:
  d8:	eb e9       	ldi	r30, 0x9B	; 155
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	88 23       	and	r24, r24
  e0:	ec f7       	brge	.-6      	; 0xdc <UART1_receive+0x4>
  e2:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
  e6:	08 95       	ret

000000e8 <UART1_init>:
  e8:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
  ec:	8f ec       	ldi	r24, 0xCF	; 207
  ee:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
  f2:	eb e9       	ldi	r30, 0x9B	; 155
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	82 60       	ori	r24, 0x02	; 2
  fa:	80 83       	st	Z, r24
  fc:	ed e9       	ldi	r30, 0x9D	; 157
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	86 60       	ori	r24, 0x06	; 6
 104:	80 83       	st	Z, r24
 106:	ea e9       	ldi	r30, 0x9A	; 154
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	80 61       	ori	r24, 0x10	; 16
 10e:	80 83       	st	Z, r24
 110:	80 81       	ld	r24, Z
 112:	88 60       	ori	r24, 0x08	; 8
 114:	80 83       	st	Z, r24
 116:	08 95       	ret

00000118 <ADC_init>:


////ADC 초기화
void ADC_init(unsigned char channel)
{
	ADMUX |= (1 << REFS0); 		// AVCC를 기준 전압으로 선택
 118:	3e 9a       	sbi	0x07, 6	; 7
	
	ADCSRA |= 0x07;			// 분주비 설정
 11a:	96 b1       	in	r25, 0x06	; 6
 11c:	97 60       	ori	r25, 0x07	; 7
 11e:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= (1 << ADEN);		// ADC 활성화
 120:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1 << ADFR);		// 프리 러닝 모드
 122:	35 9a       	sbi	0x06, 5	; 6

	ADMUX |= ((ADMUX & 0xE0) | channel);	// 채널 선택
 124:	97 b1       	in	r25, 0x07	; 7
 126:	27 b1       	in	r18, 0x07	; 7
 128:	90 7e       	andi	r25, 0xE0	; 224
 12a:	89 2b       	or	r24, r25
 12c:	82 2b       	or	r24, r18
 12e:	87 b9       	out	0x07, r24	; 7

	ADCSRA |= (1 << ADSC);		// 변환 시작
 130:	36 9a       	sbi	0x06, 6	; 6
 132:	08 95       	ret

00000134 <read_ADC>:
}
////ADC 읽는 부분
int read_ADC(void)
{
	while(!(ADCSRA & (1 << ADIF)));	// 변환 종료 대
 134:	34 9b       	sbis	0x06, 4	; 6
 136:	fe cf       	rjmp	.-4      	; 0x134 <read_ADC>

	
	return ADC;				// 10비트 값을 반환
 138:	84 b1       	in	r24, 0x04	; 4
 13a:	95 b1       	in	r25, 0x05	; 5
}
 13c:	08 95       	ret

0000013e <main>:


	////사용하고 있는 핀들
	
	unsigned char sw;
	DDRC = 0xFF;		//포트C 출력 설정: led
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	84 bb       	out	0x14, r24	; 20
	DDRA = 0x0;			//포트A 입력 설정: led 전용 스위치
 142:	1a ba       	out	0x1a, r1	; 26
	//0이면 입력모드, 1이면 출력모드이데, 모두 0이니 입력만
	
	PORTA = 0xFF;		//풀업상태에서 출력에 1111 1111이니까 LED 모두 안켜짐
 144:	8b bb       	out	0x1b, r24	; 27
	

	UART1_init(); // UART0 초기화
 146:	d0 df       	rcall	.-96     	; 0xe8 <UART1_init>
	int i =0;
	/*main안에서 선언한 변수들 End*/
	/*사용자 코드  Begin*/


	stdout = &OUTPUT; //PUTTY에서  printf 사용하도록 설정
 148:	e6 e5       	ldi	r30, 0x56	; 86
 14a:	f1 e0       	ldi	r31, 0x01	; 1
 14c:	8f e0       	ldi	r24, 0x0F	; 15
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	93 83       	std	Z+3, r25	; 0x03
 152:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	91 83       	std	Z+1, r25	; 0x01
 15a:	80 83       	st	Z, r24

	ADC_init(3);				// AD 변환기 초기화. 채널 3 사용
 15c:	83 e0       	ldi	r24, 0x03	; 3
 15e:	dc df       	rcall	.-72     	; 0x118 <ADC_init>
		//0001 0000 입력되고
		//0001 0000 를 &연산하니까
		//0001 0000 되고 그 값을 sw에 넣는다.
		//떼진상태에서 0001 0000로  e에 주고,
		
		if(sw != 0) PORTA = 0xFF;	//누른상태에서1110 1111을 e에 준다.							//	&연산 0001 0000 하니
 160:	aa 24       	eor	r10, r10
 162:	aa 94       	dec	r10
		//0에서 1023 사이의 값을 0과 5v 사이 값으로 변환
		
		temperature = (int)(input_voltage * 100.0)- 10.0;

		
		printf("Temp: %d", temperature);
 164:	0f 2e       	mov	r0, r31
 166:	fd e1       	ldi	r31, 0x1D	; 29
 168:	ef 2e       	mov	r14, r31
 16a:	f1 e0       	ldi	r31, 0x01	; 1
 16c:	ff 2e       	mov	r15, r31
 16e:	f0 2d       	mov	r31, r0
		_delay_ms(100);
			
			
		LCD_init();				// 텍스트 LCD 초기화, while문안에서 lcd초기화해야 작동함
		memset(lcd_buf,0,20);	//lcd_buf문자열을 모두 0으로 초기화
 170:	c2 e4       	ldi	r28, 0x42	; 66
 172:	d1 e0       	ldi	r29, 0x01	; 1
 174:	0f 2e       	mov	r0, r31
 176:	f4 e1       	ldi	r31, 0x14	; 20
 178:	bf 2e       	mov	r11, r31
 17a:	f0 2d       	mov	r31, r0
		sprintf(lcd_buf,"Now Temp  %02d C",temperature);
 17c:	06 e2       	ldi	r16, 0x26	; 38
 17e:	11 e0       	ldi	r17, 0x01	; 1
		LCD_goto_XY(1,0);			 //커서를 1행 3열로 이동시켜라.
		LCD_write_string(lcd_buf);		// 문자열 출력
		_delay_ms(1000);
		//@ 블루투스를 사용해서 스마트폰으로 입력하면 앱에서 printf되도록
		//scanf("%c", &data);			// 문자 단위 데이터 수신
		printf("%c", data);			// 문자 단위 데이터 송신
 180:	c1 2c       	mov	r12, r1
 182:	d1 2c       	mov	r13, r1
		//0001 0000 입력되고
		//0001 0000 를 &연산하니까
		//0001 0000 되고 그 값을 sw에 넣는다.
		//떼진상태에서 0001 0000로  e에 주고,
		
		if(sw != 0) PORTA = 0xFF;	//누른상태에서1110 1111을 e에 준다.							//	&연산 0001 0000 하니
 184:	cc 9b       	sbis	0x19, 4	; 25
 186:	02 c0       	rjmp	.+4      	; 0x18c <main+0x4e>
 188:	ab ba       	out	0x1b, r10	; 27
		//            0000 0000 된다.
		else PORTA = 0x0;			//SW1 ON -> LED 모두 ON
 18a:	01 c0       	rjmp	.+2      	; 0x18e <main+0x50>
		
		//@온도 센서
		read = read_ADC();		//ADC로 10비트 나온 값 읽기
 18c:	1b ba       	out	0x1b, r1	; 27
 18e:	d2 df       	rcall	.-92     	; 0x134 <read_ADC>
		input_voltage = read * 5.0 / 1023.0;
		//0에서 1023 사이의 값을 0과 5v 사이 값으로 변환
		
		temperature = (int)(input_voltage * 100.0)- 10.0;
 190:	bc 01       	movw	r22, r24
 192:	99 0f       	add	r25, r25
 194:	88 0b       	sbc	r24, r24
 196:	99 0b       	sbc	r25, r25
 198:	ed d1       	rcall	.+986    	; 0x574 <__floatsisf>
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	40 ea       	ldi	r20, 0xA0	; 160
 1a0:	50 e4       	ldi	r21, 0x40	; 64
 1a2:	74 d2       	rcall	.+1256   	; 0x68c <__mulsf3>
 1a4:	20 e0       	ldi	r18, 0x00	; 0
 1a6:	30 ec       	ldi	r19, 0xC0	; 192
 1a8:	4f e7       	ldi	r20, 0x7F	; 127
 1aa:	54 e4       	ldi	r21, 0x44	; 68
 1ac:	48 d1       	rcall	.+656    	; 0x43e <__divsf3>
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	48 ec       	ldi	r20, 0xC8	; 200
 1b4:	52 e4       	ldi	r21, 0x42	; 66
 1b6:	6a d2       	rcall	.+1236   	; 0x68c <__mulsf3>
 1b8:	aa d1       	rcall	.+852    	; 0x50e <__fixsfsi>
 1ba:	07 2e       	mov	r0, r23
 1bc:	00 0c       	add	r0, r0
 1be:	88 0b       	sbc	r24, r24
 1c0:	99 0b       	sbc	r25, r25
 1c2:	d8 d1       	rcall	.+944    	; 0x574 <__floatsisf>
 1c4:	20 e0       	ldi	r18, 0x00	; 0
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	40 e2       	ldi	r20, 0x20	; 32
 1ca:	51 e4       	ldi	r21, 0x41	; 65
 1cc:	d3 d0       	rcall	.+422    	; 0x374 <__subsf3>
 1ce:	9f d1       	rcall	.+830    	; 0x50e <__fixsfsi>
 1d0:	96 2e       	mov	r9, r22
 1d2:	87 2e       	mov	r8, r23

		
		printf("Temp: %d", temperature);
 1d4:	7f 93       	push	r23
 1d6:	6f 93       	push	r22
 1d8:	ff 92       	push	r15
 1da:	ef 92       	push	r14
 1dc:	ba d2       	rcall	.+1396   	; 0x752 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1de:	2f ef       	ldi	r18, 0xFF	; 255
 1e0:	81 ee       	ldi	r24, 0xE1	; 225
 1e2:	94 e0       	ldi	r25, 0x04	; 4
 1e4:	21 50       	subi	r18, 0x01	; 1
 1e6:	80 40       	sbci	r24, 0x00	; 0
 1e8:	90 40       	sbci	r25, 0x00	; 0
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <main+0xa6>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <main+0xb0>
 1ee:	00 00       	nop
		_delay_ms(100);
			
			
		LCD_init();				// 텍스트 LCD 초기화, while문안에서 lcd초기화해야 작동함
 1f0:	79 d0       	rcall	.+242    	; 0x2e4 <LCD_init>
		memset(lcd_buf,0,20);	//lcd_buf문자열을 모두 0으로 초기화
 1f2:	fe 01       	movw	r30, r28
 1f4:	2b 2d       	mov	r18, r11
 1f6:	11 92       	st	Z+, r1
 1f8:	2a 95       	dec	r18
		sprintf(lcd_buf,"Now Temp  %02d C",temperature);
 1fa:	e9 f7       	brne	.-6      	; 0x1f6 <main+0xb8>
 1fc:	8f 92       	push	r8
 1fe:	9f 92       	push	r9
 200:	1f 93       	push	r17
 202:	0f 93       	push	r16
 204:	df 93       	push	r29
			
		LCD_goto_XY(0,5);			//커서를 0행 5열로 이동시켜라.
 206:	cf 93       	push	r28
 208:	bc d2       	rcall	.+1400   	; 0x782 <sprintf>
 20a:	65 e0       	ldi	r22, 0x05	; 5
 20c:	80 e0       	ldi	r24, 0x00	; 0
		LCD_write_string("Goldenboy");		//문자열 출력
 20e:	a8 d0       	rcall	.+336    	; 0x360 <LCD_goto_XY>
 210:	87 e3       	ldi	r24, 0x37	; 55
 212:	91 e0       	ldi	r25, 0x01	; 1
		LCD_goto_XY(1,0);			 //커서를 1행 3열로 이동시켜라.
 214:	90 d0       	rcall	.+288    	; 0x336 <LCD_write_string>
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	a2 d0       	rcall	.+324    	; 0x360 <LCD_goto_XY>
		LCD_write_string(lcd_buf);		// 문자열 출력
 21c:	ce 01       	movw	r24, r28
 21e:	8b d0       	rcall	.+278    	; 0x336 <LCD_write_string>
 220:	ef ef       	ldi	r30, 0xFF	; 255
 222:	f3 ed       	ldi	r31, 0xD3	; 211
 224:	20 e3       	ldi	r18, 0x30	; 48
 226:	e1 50       	subi	r30, 0x01	; 1
 228:	f0 40       	sbci	r31, 0x00	; 0
 22a:	20 40       	sbci	r18, 0x00	; 0
 22c:	e1 f7       	brne	.-8      	; 0x226 <main+0xe8>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0xf2>
 230:	00 00       	nop
 232:	c6 01       	movw	r24, r12
		_delay_ms(1000);
		//@ 블루투스를 사용해서 스마트폰으로 입력하면 앱에서 printf되도록
		//scanf("%c", &data);			// 문자 단위 데이터 수신
		printf("%c", data);			// 문자 단위 데이터 송신
 234:	a1 d2       	rcall	.+1346   	; 0x778 <putchar>
 236:	8d b7       	in	r24, 0x3d	; 61
 238:	9e b7       	in	r25, 0x3e	; 62
		
		/*사용자 코드 End */
	}
 23a:	0a 96       	adiw	r24, 0x0a	; 10
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	f8 94       	cli
 240:	9e bf       	out	0x3e, r25	; 62
 242:	0f be       	out	0x3f, r0	; 63
 244:	8d bf       	out	0x3d, r24	; 61
 246:	9e cf       	rjmp	.-196    	; 0x184 <main+0x46>

00000248 <LCD_pulse_enable>:
﻿#include "Text_LCD.h"

void LCD_pulse_enable(void) 		// 하강 에지에서 동작
{
	PORT_CONTROL |= (1 << E_PIN);	// E를 HIGH로
 248:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	85 e0       	ldi	r24, 0x05	; 5
 24c:	8a 95       	dec	r24
 24e:	f1 f7       	brne	.-4      	; 0x24c <LCD_pulse_enable+0x4>
 250:	00 00       	nop
	_delay_us(1);
	PORT_CONTROL &= ~(1 << E_PIN);	// E를 LOW로
 252:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 254:	8f e9       	ldi	r24, 0x9F	; 159
 256:	9f e0       	ldi	r25, 0x0F	; 15
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <LCD_pulse_enable+0x10>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <LCD_pulse_enable+0x16>
 25e:	00 00       	nop
 260:	08 95       	ret

00000262 <LCD_write_data>:
	_delay_ms(1);
}

void LCD_write_data(uint8_t data)
{
 262:	cf 93       	push	r28
 264:	c8 2f       	mov	r28, r24
	PORT_CONTROL |= (1 << RS_PIN);	// 문자 출력에서 RS는 1
 266:	a8 9a       	sbi	0x15, 0	; 21
	
	if(MODE == 8){
 268:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 26c:	88 30       	cpi	r24, 0x08	; 8
 26e:	19 f4       	brne	.+6      	; 0x276 <LCD_write_data+0x14>
		PORT_DATA = data;			// 출력할 문자 데이터
 270:	c2 bb       	out	0x12, r28	; 18
		LCD_pulse_enable();
 272:	ea df       	rcall	.-44     	; 0x248 <LCD_pulse_enable>
 274:	0a c0       	rjmp	.+20     	; 0x28a <LCD_write_data+0x28>
	}
	else{
		PORT_DATA = data & 0xF0;		// 상위 4비트
 276:	8c 2f       	mov	r24, r28
 278:	80 7f       	andi	r24, 0xF0	; 240
		LCD_pulse_enable();
 27a:	82 bb       	out	0x12, r24	; 18
 27c:	e5 df       	rcall	.-54     	; 0x248 <LCD_pulse_enable>
		
		PORT_DATA = (data << 4) & 0xF0;	// 하위 4비트
 27e:	20 e1       	ldi	r18, 0x10	; 16
 280:	c2 9f       	mul	r28, r18
 282:	c0 01       	movw	r24, r0
 284:	11 24       	eor	r1, r1
		LCD_pulse_enable();
 286:	82 bb       	out	0x12, r24	; 18
 288:	df df       	rcall	.-66     	; 0x248 <LCD_pulse_enable>
 28a:	8f e3       	ldi	r24, 0x3F	; 63
 28c:	9f e1       	ldi	r25, 0x1F	; 31
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <LCD_write_data+0x2c>
 292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_write_data+0x32>
 294:	00 00       	nop
	}
	_delay_ms(2);
}
 296:	cf 91       	pop	r28
 298:	08 95       	ret

0000029a <LCD_write_command>:

void LCD_write_command(uint8_t command)
{
 29a:	cf 93       	push	r28
 29c:	c8 2f       	mov	r28, r24
	PORT_CONTROL &= ~(1 << RS_PIN);	// 명령어 실행에서 RS는 0
 29e:	a8 98       	cbi	0x15, 0	; 21
	
	if(MODE == 8){
 2a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2a4:	88 30       	cpi	r24, 0x08	; 8
 2a6:	19 f4       	brne	.+6      	; 0x2ae <LCD_write_command+0x14>
		PORT_DATA = command;		// 데이터 핀에 명령어 전달
 2a8:	c2 bb       	out	0x12, r28	; 18
		LCD_pulse_enable();			// 명령어 실행
 2aa:	ce df       	rcall	.-100    	; 0x248 <LCD_pulse_enable>
 2ac:	0a c0       	rjmp	.+20     	; 0x2c2 <LCD_write_command+0x28>
	}
	else{
		PORT_DATA = command & 0xF0;		// 상위 4비트
 2ae:	8c 2f       	mov	r24, r28
 2b0:	80 7f       	andi	r24, 0xF0	; 240
		LCD_pulse_enable();
 2b2:	82 bb       	out	0x12, r24	; 18
 2b4:	c9 df       	rcall	.-110    	; 0x248 <LCD_pulse_enable>
		
		PORT_DATA = (command << 4) & 0xF0;	// 하위 4비트
 2b6:	20 e1       	ldi	r18, 0x10	; 16
 2b8:	c2 9f       	mul	r28, r18
 2ba:	c0 01       	movw	r24, r0
 2bc:	11 24       	eor	r1, r1
		LCD_pulse_enable();
 2be:	82 bb       	out	0x12, r24	; 18
 2c0:	c3 df       	rcall	.-122    	; 0x248 <LCD_pulse_enable>
 2c2:	8f e3       	ldi	r24, 0x3F	; 63
 2c4:	9f e1       	ldi	r25, 0x1F	; 31
 2c6:	01 97       	sbiw	r24, 0x01	; 1
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <LCD_write_command+0x2c>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <LCD_write_command+0x32>
 2cc:	00 00       	nop
	}
	_delay_ms(2);
}
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <LCD_clear>:

void LCD_clear(void)
{
	LCD_write_command(COMMAND_CLEAR_DISPLAY);
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	e2 df       	rcall	.-60     	; 0x29a <LCD_write_command>
 2d6:	8f e3       	ldi	r24, 0x3F	; 63
 2d8:	9f e1       	ldi	r25, 0x1F	; 31
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <LCD_clear+0x8>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <LCD_clear+0xe>
 2e0:	00 00       	nop
 2e2:	08 95       	ret

000002e4 <LCD_init>:
 2e4:	2f ef       	ldi	r18, 0xFF	; 255
 2e6:	80 e7       	ldi	r24, 0x70	; 112
 2e8:	92 e0       	ldi	r25, 0x02	; 2
 2ea:	21 50       	subi	r18, 0x01	; 1
 2ec:	80 40       	sbci	r24, 0x00	; 0
 2ee:	90 40       	sbci	r25, 0x00	; 0
 2f0:	e1 f7       	brne	.-8      	; 0x2ea <LCD_init+0x6>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <LCD_init+0x10>
 2f4:	00 00       	nop
void LCD_init(void)
{
	_delay_ms(50);				// 초기 구동 시간
	
	// 연결 핀을 출력으로 설정
	if(MODE == 8) DDR_DATA = 0xFF;
 2f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2fa:	88 30       	cpi	r24, 0x08	; 8
 2fc:	19 f4       	brne	.+6      	; 0x304 <LCD_init+0x20>
 2fe:	8f ef       	ldi	r24, 0xFF	; 255
 300:	81 bb       	out	0x11, r24	; 17
 302:	03 c0       	rjmp	.+6      	; 0x30a <LCD_init+0x26>
	else DDR_DATA |= 0xF0;
 304:	81 b3       	in	r24, 0x11	; 17
 306:	80 6f       	ori	r24, 0xF0	; 240
 308:	81 bb       	out	0x11, r24	; 17
	PORT_DATA = 0x00;
 30a:	12 ba       	out	0x12, r1	; 18
	
	DDR_CONTROL |= (1 << RS_PIN) | (1 << RW_PIN) | (1 << E_PIN);
 30c:	84 b3       	in	r24, 0x14	; 20
 30e:	87 60       	ori	r24, 0x07	; 7
 310:	84 bb       	out	0x14, r24	; 20
	
	// RW 핀으로 LOW를 출력하여 쓰기 전용으로 사용
	PORT_CONTROL &= ~(1 << RW_PIN);
 312:	a9 98       	cbi	0x15, 1	; 21
	
	if(MODE == 8)
 314:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 318:	88 30       	cpi	r24, 0x08	; 8
 31a:	19 f4       	brne	.+6      	; 0x322 <LCD_init+0x3e>
	LCD_write_command(COMMAND_8_BIT_MODE);		// 8비트 모드
 31c:	88 e3       	ldi	r24, 0x38	; 56
 31e:	bd df       	rcall	.-134    	; 0x29a <LCD_write_command>
 320:	04 c0       	rjmp	.+8      	; 0x32a <LCD_init+0x46>
	else{
		LCD_write_command(0x02);				// 4비트 모드 추가 명령
 322:	82 e0       	ldi	r24, 0x02	; 2
 324:	ba df       	rcall	.-140    	; 0x29a <LCD_write_command>
		LCD_write_command(COMMAND_4_BIT_MODE);		// 4비트 모드
 326:	88 e2       	ldi	r24, 0x28	; 40
 328:	b8 df       	rcall	.-144    	; 0x29a <LCD_write_command>
	}
	
	// display on/off control
	// 화면 on, 커서 off, 커서 깜빡임 off
	uint8_t command = 0x08 | (1 << COMMAND_DISPLAY_ON_OFF_BIT);
	LCD_write_command(command);
 32a:	8c e0       	ldi	r24, 0x0C	; 12
 32c:	b6 df       	rcall	.-148    	; 0x29a <LCD_write_command>

	LCD_clear();			// 화면 지움
 32e:	d1 df       	rcall	.-94     	; 0x2d2 <LCD_clear>
 330:	86 e0       	ldi	r24, 0x06	; 6

	// Entry Mode Set
	// 출력 후 커서를 오른쪽으로 옮김, 즉, DDRAM의 주소가 증가하며 화면 이동은 없음
	LCD_write_command(0x06);
 332:	b3 cf       	rjmp	.-154    	; 0x29a <LCD_write_command>
 334:	08 95       	ret

00000336 <LCD_write_string>:
 336:	0f 93       	push	r16
 338:	1f 93       	push	r17
}

void LCD_write_string(char *string)
{
 33a:	cf 93       	push	r28
 33c:	fc 01       	movw	r30, r24
	uint8_t i;
	for(i = 0; string[i]; i++)			// 종료 문자를 만날 때까지
 33e:	80 81       	ld	r24, Z
 340:	88 23       	and	r24, r24
 342:	51 f0       	breq	.+20     	; 0x358 <LCD_write_string+0x22>
 344:	8f 01       	movw	r16, r30
 346:	c0 e0       	ldi	r28, 0x00	; 0
	LCD_write_data(string[i]);		// 문자 단위 출력
 348:	8c df       	rcall	.-232    	; 0x262 <LCD_write_data>
}

void LCD_write_string(char *string)
{
	uint8_t i;
	for(i = 0; string[i]; i++)			// 종료 문자를 만날 때까지
 34a:	cf 5f       	subi	r28, 0xFF	; 255
 34c:	f8 01       	movw	r30, r16
 34e:	ec 0f       	add	r30, r28
 350:	f1 1d       	adc	r31, r1
 352:	80 81       	ld	r24, Z
 354:	81 11       	cpse	r24, r1
 356:	f8 cf       	rjmp	.-16     	; 0x348 <LCD_write_string+0x12>
	LCD_write_data(string[i]);		// 문자 단위 출력
}
 358:	cf 91       	pop	r28
 35a:	1f 91       	pop	r17
 35c:	0f 91       	pop	r16
 35e:	08 95       	ret

00000360 <LCD_goto_XY>:

	// 첫째 라인 시작 주소는 0x00, 둘째 라인 시작 주소는 0x40
	uint8_t address = (0x40 * row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);	// 커서 이동
 360:	81 70       	andi	r24, 0x01	; 1
 362:	6f 70       	andi	r22, 0x0F	; 15
 364:	90 e4       	ldi	r25, 0x40	; 64
 366:	89 9f       	mul	r24, r25
 368:	60 0d       	add	r22, r0
 36a:	11 24       	eor	r1, r1
 36c:	86 2f       	mov	r24, r22
 36e:	80 58       	subi	r24, 0x80	; 128
 370:	94 cf       	rjmp	.-216    	; 0x29a <LCD_write_command>
 372:	08 95       	ret

00000374 <__subsf3>:
 374:	50 58       	subi	r21, 0x80	; 128

00000376 <__addsf3>:
 376:	bb 27       	eor	r27, r27
 378:	aa 27       	eor	r26, r26
 37a:	0e d0       	rcall	.+28     	; 0x398 <__addsf3x>
 37c:	4d c1       	rjmp	.+666    	; 0x618 <__fp_round>
 37e:	3e d1       	rcall	.+636    	; 0x5fc <__fp_pscA>
 380:	30 f0       	brcs	.+12     	; 0x38e <__addsf3+0x18>
 382:	43 d1       	rcall	.+646    	; 0x60a <__fp_pscB>
 384:	20 f0       	brcs	.+8      	; 0x38e <__addsf3+0x18>
 386:	31 f4       	brne	.+12     	; 0x394 <__addsf3+0x1e>
 388:	9f 3f       	cpi	r25, 0xFF	; 255
 38a:	11 f4       	brne	.+4      	; 0x390 <__addsf3+0x1a>
 38c:	1e f4       	brtc	.+6      	; 0x394 <__addsf3+0x1e>
 38e:	33 c1       	rjmp	.+614    	; 0x5f6 <__fp_nan>
 390:	0e f4       	brtc	.+2      	; 0x394 <__addsf3+0x1e>
 392:	e0 95       	com	r30
 394:	e7 fb       	bst	r30, 7
 396:	29 c1       	rjmp	.+594    	; 0x5ea <__fp_inf>

00000398 <__addsf3x>:
 398:	e9 2f       	mov	r30, r25
 39a:	4f d1       	rcall	.+670    	; 0x63a <__fp_split3>
 39c:	80 f3       	brcs	.-32     	; 0x37e <__addsf3+0x8>
 39e:	ba 17       	cp	r27, r26
 3a0:	62 07       	cpc	r22, r18
 3a2:	73 07       	cpc	r23, r19
 3a4:	84 07       	cpc	r24, r20
 3a6:	95 07       	cpc	r25, r21
 3a8:	18 f0       	brcs	.+6      	; 0x3b0 <__addsf3x+0x18>
 3aa:	71 f4       	brne	.+28     	; 0x3c8 <__addsf3x+0x30>
 3ac:	9e f5       	brtc	.+102    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3ae:	67 c1       	rjmp	.+718    	; 0x67e <__fp_zero>
 3b0:	0e f4       	brtc	.+2      	; 0x3b4 <__addsf3x+0x1c>
 3b2:	e0 95       	com	r30
 3b4:	0b 2e       	mov	r0, r27
 3b6:	ba 2f       	mov	r27, r26
 3b8:	a0 2d       	mov	r26, r0
 3ba:	0b 01       	movw	r0, r22
 3bc:	b9 01       	movw	r22, r18
 3be:	90 01       	movw	r18, r0
 3c0:	0c 01       	movw	r0, r24
 3c2:	ca 01       	movw	r24, r20
 3c4:	a0 01       	movw	r20, r0
 3c6:	11 24       	eor	r1, r1
 3c8:	ff 27       	eor	r31, r31
 3ca:	59 1b       	sub	r21, r25
 3cc:	99 f0       	breq	.+38     	; 0x3f4 <__addsf3x+0x5c>
 3ce:	59 3f       	cpi	r21, 0xF9	; 249
 3d0:	50 f4       	brcc	.+20     	; 0x3e6 <__addsf3x+0x4e>
 3d2:	50 3e       	cpi	r21, 0xE0	; 224
 3d4:	68 f1       	brcs	.+90     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3d6:	1a 16       	cp	r1, r26
 3d8:	f0 40       	sbci	r31, 0x00	; 0
 3da:	a2 2f       	mov	r26, r18
 3dc:	23 2f       	mov	r18, r19
 3de:	34 2f       	mov	r19, r20
 3e0:	44 27       	eor	r20, r20
 3e2:	58 5f       	subi	r21, 0xF8	; 248
 3e4:	f3 cf       	rjmp	.-26     	; 0x3cc <__addsf3x+0x34>
 3e6:	46 95       	lsr	r20
 3e8:	37 95       	ror	r19
 3ea:	27 95       	ror	r18
 3ec:	a7 95       	ror	r26
 3ee:	f0 40       	sbci	r31, 0x00	; 0
 3f0:	53 95       	inc	r21
 3f2:	c9 f7       	brne	.-14     	; 0x3e6 <__addsf3x+0x4e>
 3f4:	7e f4       	brtc	.+30     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f6:	1f 16       	cp	r1, r31
 3f8:	ba 0b       	sbc	r27, r26
 3fa:	62 0b       	sbc	r22, r18
 3fc:	73 0b       	sbc	r23, r19
 3fe:	84 0b       	sbc	r24, r20
 400:	ba f0       	brmi	.+46     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 402:	91 50       	subi	r25, 0x01	; 1
 404:	a1 f0       	breq	.+40     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 406:	ff 0f       	add	r31, r31
 408:	bb 1f       	adc	r27, r27
 40a:	66 1f       	adc	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	c2 f7       	brpl	.-16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 412:	0e c0       	rjmp	.+28     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 414:	ba 0f       	add	r27, r26
 416:	62 1f       	adc	r22, r18
 418:	73 1f       	adc	r23, r19
 41a:	84 1f       	adc	r24, r20
 41c:	48 f4       	brcc	.+18     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 41e:	87 95       	ror	r24
 420:	77 95       	ror	r23
 422:	67 95       	ror	r22
 424:	b7 95       	ror	r27
 426:	f7 95       	ror	r31
 428:	9e 3f       	cpi	r25, 0xFE	; 254
 42a:	08 f0       	brcs	.+2      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42c:	b3 cf       	rjmp	.-154    	; 0x394 <__addsf3+0x1e>
 42e:	93 95       	inc	r25
 430:	88 0f       	add	r24, r24
 432:	08 f0       	brcs	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	99 27       	eor	r25, r25
 436:	ee 0f       	add	r30, r30
 438:	97 95       	ror	r25
 43a:	87 95       	ror	r24
 43c:	08 95       	ret

0000043e <__divsf3>:
 43e:	0c d0       	rcall	.+24     	; 0x458 <__divsf3x>
 440:	eb c0       	rjmp	.+470    	; 0x618 <__fp_round>
 442:	e3 d0       	rcall	.+454    	; 0x60a <__fp_pscB>
 444:	40 f0       	brcs	.+16     	; 0x456 <__divsf3+0x18>
 446:	da d0       	rcall	.+436    	; 0x5fc <__fp_pscA>
 448:	30 f0       	brcs	.+12     	; 0x456 <__divsf3+0x18>
 44a:	21 f4       	brne	.+8      	; 0x454 <__divsf3+0x16>
 44c:	5f 3f       	cpi	r21, 0xFF	; 255
 44e:	19 f0       	breq	.+6      	; 0x456 <__divsf3+0x18>
 450:	cc c0       	rjmp	.+408    	; 0x5ea <__fp_inf>
 452:	51 11       	cpse	r21, r1
 454:	15 c1       	rjmp	.+554    	; 0x680 <__fp_szero>
 456:	cf c0       	rjmp	.+414    	; 0x5f6 <__fp_nan>

00000458 <__divsf3x>:
 458:	f0 d0       	rcall	.+480    	; 0x63a <__fp_split3>
 45a:	98 f3       	brcs	.-26     	; 0x442 <__divsf3+0x4>

0000045c <__divsf3_pse>:
 45c:	99 23       	and	r25, r25
 45e:	c9 f3       	breq	.-14     	; 0x452 <__divsf3+0x14>
 460:	55 23       	and	r21, r21
 462:	b1 f3       	breq	.-20     	; 0x450 <__divsf3+0x12>
 464:	95 1b       	sub	r25, r21
 466:	55 0b       	sbc	r21, r21
 468:	bb 27       	eor	r27, r27
 46a:	aa 27       	eor	r26, r26
 46c:	62 17       	cp	r22, r18
 46e:	73 07       	cpc	r23, r19
 470:	84 07       	cpc	r24, r20
 472:	38 f0       	brcs	.+14     	; 0x482 <__divsf3_pse+0x26>
 474:	9f 5f       	subi	r25, 0xFF	; 255
 476:	5f 4f       	sbci	r21, 0xFF	; 255
 478:	22 0f       	add	r18, r18
 47a:	33 1f       	adc	r19, r19
 47c:	44 1f       	adc	r20, r20
 47e:	aa 1f       	adc	r26, r26
 480:	a9 f3       	breq	.-22     	; 0x46c <__divsf3_pse+0x10>
 482:	33 d0       	rcall	.+102    	; 0x4ea <__divsf3_pse+0x8e>
 484:	0e 2e       	mov	r0, r30
 486:	3a f0       	brmi	.+14     	; 0x496 <__divsf3_pse+0x3a>
 488:	e0 e8       	ldi	r30, 0x80	; 128
 48a:	30 d0       	rcall	.+96     	; 0x4ec <__divsf3_pse+0x90>
 48c:	91 50       	subi	r25, 0x01	; 1
 48e:	50 40       	sbci	r21, 0x00	; 0
 490:	e6 95       	lsr	r30
 492:	00 1c       	adc	r0, r0
 494:	ca f7       	brpl	.-14     	; 0x488 <__divsf3_pse+0x2c>
 496:	29 d0       	rcall	.+82     	; 0x4ea <__divsf3_pse+0x8e>
 498:	fe 2f       	mov	r31, r30
 49a:	27 d0       	rcall	.+78     	; 0x4ea <__divsf3_pse+0x8e>
 49c:	66 0f       	add	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	88 1f       	adc	r24, r24
 4a2:	bb 1f       	adc	r27, r27
 4a4:	26 17       	cp	r18, r22
 4a6:	37 07       	cpc	r19, r23
 4a8:	48 07       	cpc	r20, r24
 4aa:	ab 07       	cpc	r26, r27
 4ac:	b0 e8       	ldi	r27, 0x80	; 128
 4ae:	09 f0       	breq	.+2      	; 0x4b2 <__divsf3_pse+0x56>
 4b0:	bb 0b       	sbc	r27, r27
 4b2:	80 2d       	mov	r24, r0
 4b4:	bf 01       	movw	r22, r30
 4b6:	ff 27       	eor	r31, r31
 4b8:	93 58       	subi	r25, 0x83	; 131
 4ba:	5f 4f       	sbci	r21, 0xFF	; 255
 4bc:	2a f0       	brmi	.+10     	; 0x4c8 <__divsf3_pse+0x6c>
 4be:	9e 3f       	cpi	r25, 0xFE	; 254
 4c0:	51 05       	cpc	r21, r1
 4c2:	68 f0       	brcs	.+26     	; 0x4de <__divsf3_pse+0x82>
 4c4:	92 c0       	rjmp	.+292    	; 0x5ea <__fp_inf>
 4c6:	dc c0       	rjmp	.+440    	; 0x680 <__fp_szero>
 4c8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ca:	ec f3       	brlt	.-6      	; 0x4c6 <__divsf3_pse+0x6a>
 4cc:	98 3e       	cpi	r25, 0xE8	; 232
 4ce:	dc f3       	brlt	.-10     	; 0x4c6 <__divsf3_pse+0x6a>
 4d0:	86 95       	lsr	r24
 4d2:	77 95       	ror	r23
 4d4:	67 95       	ror	r22
 4d6:	b7 95       	ror	r27
 4d8:	f7 95       	ror	r31
 4da:	9f 5f       	subi	r25, 0xFF	; 255
 4dc:	c9 f7       	brne	.-14     	; 0x4d0 <__divsf3_pse+0x74>
 4de:	88 0f       	add	r24, r24
 4e0:	91 1d       	adc	r25, r1
 4e2:	96 95       	lsr	r25
 4e4:	87 95       	ror	r24
 4e6:	97 f9       	bld	r25, 7
 4e8:	08 95       	ret
 4ea:	e1 e0       	ldi	r30, 0x01	; 1
 4ec:	66 0f       	add	r22, r22
 4ee:	77 1f       	adc	r23, r23
 4f0:	88 1f       	adc	r24, r24
 4f2:	bb 1f       	adc	r27, r27
 4f4:	62 17       	cp	r22, r18
 4f6:	73 07       	cpc	r23, r19
 4f8:	84 07       	cpc	r24, r20
 4fa:	ba 07       	cpc	r27, r26
 4fc:	20 f0       	brcs	.+8      	; 0x506 <__divsf3_pse+0xaa>
 4fe:	62 1b       	sub	r22, r18
 500:	73 0b       	sbc	r23, r19
 502:	84 0b       	sbc	r24, r20
 504:	ba 0b       	sbc	r27, r26
 506:	ee 1f       	adc	r30, r30
 508:	88 f7       	brcc	.-30     	; 0x4ec <__divsf3_pse+0x90>
 50a:	e0 95       	com	r30
 50c:	08 95       	ret

0000050e <__fixsfsi>:
 50e:	04 d0       	rcall	.+8      	; 0x518 <__fixunssfsi>
 510:	68 94       	set
 512:	b1 11       	cpse	r27, r1
 514:	b5 c0       	rjmp	.+362    	; 0x680 <__fp_szero>
 516:	08 95       	ret

00000518 <__fixunssfsi>:
 518:	98 d0       	rcall	.+304    	; 0x64a <__fp_splitA>
 51a:	88 f0       	brcs	.+34     	; 0x53e <__fixunssfsi+0x26>
 51c:	9f 57       	subi	r25, 0x7F	; 127
 51e:	90 f0       	brcs	.+36     	; 0x544 <__fixunssfsi+0x2c>
 520:	b9 2f       	mov	r27, r25
 522:	99 27       	eor	r25, r25
 524:	b7 51       	subi	r27, 0x17	; 23
 526:	a0 f0       	brcs	.+40     	; 0x550 <__fixunssfsi+0x38>
 528:	d1 f0       	breq	.+52     	; 0x55e <__fixunssfsi+0x46>
 52a:	66 0f       	add	r22, r22
 52c:	77 1f       	adc	r23, r23
 52e:	88 1f       	adc	r24, r24
 530:	99 1f       	adc	r25, r25
 532:	1a f0       	brmi	.+6      	; 0x53a <__fixunssfsi+0x22>
 534:	ba 95       	dec	r27
 536:	c9 f7       	brne	.-14     	; 0x52a <__fixunssfsi+0x12>
 538:	12 c0       	rjmp	.+36     	; 0x55e <__fixunssfsi+0x46>
 53a:	b1 30       	cpi	r27, 0x01	; 1
 53c:	81 f0       	breq	.+32     	; 0x55e <__fixunssfsi+0x46>
 53e:	9f d0       	rcall	.+318    	; 0x67e <__fp_zero>
 540:	b1 e0       	ldi	r27, 0x01	; 1
 542:	08 95       	ret
 544:	9c c0       	rjmp	.+312    	; 0x67e <__fp_zero>
 546:	67 2f       	mov	r22, r23
 548:	78 2f       	mov	r23, r24
 54a:	88 27       	eor	r24, r24
 54c:	b8 5f       	subi	r27, 0xF8	; 248
 54e:	39 f0       	breq	.+14     	; 0x55e <__fixunssfsi+0x46>
 550:	b9 3f       	cpi	r27, 0xF9	; 249
 552:	cc f3       	brlt	.-14     	; 0x546 <__fixunssfsi+0x2e>
 554:	86 95       	lsr	r24
 556:	77 95       	ror	r23
 558:	67 95       	ror	r22
 55a:	b3 95       	inc	r27
 55c:	d9 f7       	brne	.-10     	; 0x554 <__fixunssfsi+0x3c>
 55e:	3e f4       	brtc	.+14     	; 0x56e <__fixunssfsi+0x56>
 560:	90 95       	com	r25
 562:	80 95       	com	r24
 564:	70 95       	com	r23
 566:	61 95       	neg	r22
 568:	7f 4f       	sbci	r23, 0xFF	; 255
 56a:	8f 4f       	sbci	r24, 0xFF	; 255
 56c:	9f 4f       	sbci	r25, 0xFF	; 255
 56e:	08 95       	ret

00000570 <__floatunsisf>:
 570:	e8 94       	clt
 572:	09 c0       	rjmp	.+18     	; 0x586 <__floatsisf+0x12>

00000574 <__floatsisf>:
 574:	97 fb       	bst	r25, 7
 576:	3e f4       	brtc	.+14     	; 0x586 <__floatsisf+0x12>
 578:	90 95       	com	r25
 57a:	80 95       	com	r24
 57c:	70 95       	com	r23
 57e:	61 95       	neg	r22
 580:	7f 4f       	sbci	r23, 0xFF	; 255
 582:	8f 4f       	sbci	r24, 0xFF	; 255
 584:	9f 4f       	sbci	r25, 0xFF	; 255
 586:	99 23       	and	r25, r25
 588:	a9 f0       	breq	.+42     	; 0x5b4 <__floatsisf+0x40>
 58a:	f9 2f       	mov	r31, r25
 58c:	96 e9       	ldi	r25, 0x96	; 150
 58e:	bb 27       	eor	r27, r27
 590:	93 95       	inc	r25
 592:	f6 95       	lsr	r31
 594:	87 95       	ror	r24
 596:	77 95       	ror	r23
 598:	67 95       	ror	r22
 59a:	b7 95       	ror	r27
 59c:	f1 11       	cpse	r31, r1
 59e:	f8 cf       	rjmp	.-16     	; 0x590 <__floatsisf+0x1c>
 5a0:	fa f4       	brpl	.+62     	; 0x5e0 <__floatsisf+0x6c>
 5a2:	bb 0f       	add	r27, r27
 5a4:	11 f4       	brne	.+4      	; 0x5aa <__floatsisf+0x36>
 5a6:	60 ff       	sbrs	r22, 0
 5a8:	1b c0       	rjmp	.+54     	; 0x5e0 <__floatsisf+0x6c>
 5aa:	6f 5f       	subi	r22, 0xFF	; 255
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	8f 4f       	sbci	r24, 0xFF	; 255
 5b0:	9f 4f       	sbci	r25, 0xFF	; 255
 5b2:	16 c0       	rjmp	.+44     	; 0x5e0 <__floatsisf+0x6c>
 5b4:	88 23       	and	r24, r24
 5b6:	11 f0       	breq	.+4      	; 0x5bc <__floatsisf+0x48>
 5b8:	96 e9       	ldi	r25, 0x96	; 150
 5ba:	11 c0       	rjmp	.+34     	; 0x5de <__floatsisf+0x6a>
 5bc:	77 23       	and	r23, r23
 5be:	21 f0       	breq	.+8      	; 0x5c8 <__floatsisf+0x54>
 5c0:	9e e8       	ldi	r25, 0x8E	; 142
 5c2:	87 2f       	mov	r24, r23
 5c4:	76 2f       	mov	r23, r22
 5c6:	05 c0       	rjmp	.+10     	; 0x5d2 <__floatsisf+0x5e>
 5c8:	66 23       	and	r22, r22
 5ca:	71 f0       	breq	.+28     	; 0x5e8 <__floatsisf+0x74>
 5cc:	96 e8       	ldi	r25, 0x86	; 134
 5ce:	86 2f       	mov	r24, r22
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	60 e0       	ldi	r22, 0x00	; 0
 5d4:	2a f0       	brmi	.+10     	; 0x5e0 <__floatsisf+0x6c>
 5d6:	9a 95       	dec	r25
 5d8:	66 0f       	add	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	88 1f       	adc	r24, r24
 5de:	da f7       	brpl	.-10     	; 0x5d6 <__floatsisf+0x62>
 5e0:	88 0f       	add	r24, r24
 5e2:	96 95       	lsr	r25
 5e4:	87 95       	ror	r24
 5e6:	97 f9       	bld	r25, 7
 5e8:	08 95       	ret

000005ea <__fp_inf>:
 5ea:	97 f9       	bld	r25, 7
 5ec:	9f 67       	ori	r25, 0x7F	; 127
 5ee:	80 e8       	ldi	r24, 0x80	; 128
 5f0:	70 e0       	ldi	r23, 0x00	; 0
 5f2:	60 e0       	ldi	r22, 0x00	; 0
 5f4:	08 95       	ret

000005f6 <__fp_nan>:
 5f6:	9f ef       	ldi	r25, 0xFF	; 255
 5f8:	80 ec       	ldi	r24, 0xC0	; 192
 5fa:	08 95       	ret

000005fc <__fp_pscA>:
 5fc:	00 24       	eor	r0, r0
 5fe:	0a 94       	dec	r0
 600:	16 16       	cp	r1, r22
 602:	17 06       	cpc	r1, r23
 604:	18 06       	cpc	r1, r24
 606:	09 06       	cpc	r0, r25
 608:	08 95       	ret

0000060a <__fp_pscB>:
 60a:	00 24       	eor	r0, r0
 60c:	0a 94       	dec	r0
 60e:	12 16       	cp	r1, r18
 610:	13 06       	cpc	r1, r19
 612:	14 06       	cpc	r1, r20
 614:	05 06       	cpc	r0, r21
 616:	08 95       	ret

00000618 <__fp_round>:
 618:	09 2e       	mov	r0, r25
 61a:	03 94       	inc	r0
 61c:	00 0c       	add	r0, r0
 61e:	11 f4       	brne	.+4      	; 0x624 <__fp_round+0xc>
 620:	88 23       	and	r24, r24
 622:	52 f0       	brmi	.+20     	; 0x638 <__fp_round+0x20>
 624:	bb 0f       	add	r27, r27
 626:	40 f4       	brcc	.+16     	; 0x638 <__fp_round+0x20>
 628:	bf 2b       	or	r27, r31
 62a:	11 f4       	brne	.+4      	; 0x630 <__fp_round+0x18>
 62c:	60 ff       	sbrs	r22, 0
 62e:	04 c0       	rjmp	.+8      	; 0x638 <__fp_round+0x20>
 630:	6f 5f       	subi	r22, 0xFF	; 255
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	08 95       	ret

0000063a <__fp_split3>:
 63a:	57 fd       	sbrc	r21, 7
 63c:	90 58       	subi	r25, 0x80	; 128
 63e:	44 0f       	add	r20, r20
 640:	55 1f       	adc	r21, r21
 642:	59 f0       	breq	.+22     	; 0x65a <__fp_splitA+0x10>
 644:	5f 3f       	cpi	r21, 0xFF	; 255
 646:	71 f0       	breq	.+28     	; 0x664 <__fp_splitA+0x1a>
 648:	47 95       	ror	r20

0000064a <__fp_splitA>:
 64a:	88 0f       	add	r24, r24
 64c:	97 fb       	bst	r25, 7
 64e:	99 1f       	adc	r25, r25
 650:	61 f0       	breq	.+24     	; 0x66a <__fp_splitA+0x20>
 652:	9f 3f       	cpi	r25, 0xFF	; 255
 654:	79 f0       	breq	.+30     	; 0x674 <__fp_splitA+0x2a>
 656:	87 95       	ror	r24
 658:	08 95       	ret
 65a:	12 16       	cp	r1, r18
 65c:	13 06       	cpc	r1, r19
 65e:	14 06       	cpc	r1, r20
 660:	55 1f       	adc	r21, r21
 662:	f2 cf       	rjmp	.-28     	; 0x648 <__fp_split3+0xe>
 664:	46 95       	lsr	r20
 666:	f1 df       	rcall	.-30     	; 0x64a <__fp_splitA>
 668:	08 c0       	rjmp	.+16     	; 0x67a <__fp_splitA+0x30>
 66a:	16 16       	cp	r1, r22
 66c:	17 06       	cpc	r1, r23
 66e:	18 06       	cpc	r1, r24
 670:	99 1f       	adc	r25, r25
 672:	f1 cf       	rjmp	.-30     	; 0x656 <__fp_splitA+0xc>
 674:	86 95       	lsr	r24
 676:	71 05       	cpc	r23, r1
 678:	61 05       	cpc	r22, r1
 67a:	08 94       	sec
 67c:	08 95       	ret

0000067e <__fp_zero>:
 67e:	e8 94       	clt

00000680 <__fp_szero>:
 680:	bb 27       	eor	r27, r27
 682:	66 27       	eor	r22, r22
 684:	77 27       	eor	r23, r23
 686:	cb 01       	movw	r24, r22
 688:	97 f9       	bld	r25, 7
 68a:	08 95       	ret

0000068c <__mulsf3>:
 68c:	0b d0       	rcall	.+22     	; 0x6a4 <__mulsf3x>
 68e:	c4 cf       	rjmp	.-120    	; 0x618 <__fp_round>
 690:	b5 df       	rcall	.-150    	; 0x5fc <__fp_pscA>
 692:	28 f0       	brcs	.+10     	; 0x69e <__mulsf3+0x12>
 694:	ba df       	rcall	.-140    	; 0x60a <__fp_pscB>
 696:	18 f0       	brcs	.+6      	; 0x69e <__mulsf3+0x12>
 698:	95 23       	and	r25, r21
 69a:	09 f0       	breq	.+2      	; 0x69e <__mulsf3+0x12>
 69c:	a6 cf       	rjmp	.-180    	; 0x5ea <__fp_inf>
 69e:	ab cf       	rjmp	.-170    	; 0x5f6 <__fp_nan>
 6a0:	11 24       	eor	r1, r1
 6a2:	ee cf       	rjmp	.-36     	; 0x680 <__fp_szero>

000006a4 <__mulsf3x>:
 6a4:	ca df       	rcall	.-108    	; 0x63a <__fp_split3>
 6a6:	a0 f3       	brcs	.-24     	; 0x690 <__mulsf3+0x4>

000006a8 <__mulsf3_pse>:
 6a8:	95 9f       	mul	r25, r21
 6aa:	d1 f3       	breq	.-12     	; 0x6a0 <__mulsf3+0x14>
 6ac:	95 0f       	add	r25, r21
 6ae:	50 e0       	ldi	r21, 0x00	; 0
 6b0:	55 1f       	adc	r21, r21
 6b2:	62 9f       	mul	r22, r18
 6b4:	f0 01       	movw	r30, r0
 6b6:	72 9f       	mul	r23, r18
 6b8:	bb 27       	eor	r27, r27
 6ba:	f0 0d       	add	r31, r0
 6bc:	b1 1d       	adc	r27, r1
 6be:	63 9f       	mul	r22, r19
 6c0:	aa 27       	eor	r26, r26
 6c2:	f0 0d       	add	r31, r0
 6c4:	b1 1d       	adc	r27, r1
 6c6:	aa 1f       	adc	r26, r26
 6c8:	64 9f       	mul	r22, r20
 6ca:	66 27       	eor	r22, r22
 6cc:	b0 0d       	add	r27, r0
 6ce:	a1 1d       	adc	r26, r1
 6d0:	66 1f       	adc	r22, r22
 6d2:	82 9f       	mul	r24, r18
 6d4:	22 27       	eor	r18, r18
 6d6:	b0 0d       	add	r27, r0
 6d8:	a1 1d       	adc	r26, r1
 6da:	62 1f       	adc	r22, r18
 6dc:	73 9f       	mul	r23, r19
 6de:	b0 0d       	add	r27, r0
 6e0:	a1 1d       	adc	r26, r1
 6e2:	62 1f       	adc	r22, r18
 6e4:	83 9f       	mul	r24, r19
 6e6:	a0 0d       	add	r26, r0
 6e8:	61 1d       	adc	r22, r1
 6ea:	22 1f       	adc	r18, r18
 6ec:	74 9f       	mul	r23, r20
 6ee:	33 27       	eor	r19, r19
 6f0:	a0 0d       	add	r26, r0
 6f2:	61 1d       	adc	r22, r1
 6f4:	23 1f       	adc	r18, r19
 6f6:	84 9f       	mul	r24, r20
 6f8:	60 0d       	add	r22, r0
 6fa:	21 1d       	adc	r18, r1
 6fc:	82 2f       	mov	r24, r18
 6fe:	76 2f       	mov	r23, r22
 700:	6a 2f       	mov	r22, r26
 702:	11 24       	eor	r1, r1
 704:	9f 57       	subi	r25, 0x7F	; 127
 706:	50 40       	sbci	r21, 0x00	; 0
 708:	8a f0       	brmi	.+34     	; 0x72c <__mulsf3_pse+0x84>
 70a:	e1 f0       	breq	.+56     	; 0x744 <__mulsf3_pse+0x9c>
 70c:	88 23       	and	r24, r24
 70e:	4a f0       	brmi	.+18     	; 0x722 <__mulsf3_pse+0x7a>
 710:	ee 0f       	add	r30, r30
 712:	ff 1f       	adc	r31, r31
 714:	bb 1f       	adc	r27, r27
 716:	66 1f       	adc	r22, r22
 718:	77 1f       	adc	r23, r23
 71a:	88 1f       	adc	r24, r24
 71c:	91 50       	subi	r25, 0x01	; 1
 71e:	50 40       	sbci	r21, 0x00	; 0
 720:	a9 f7       	brne	.-22     	; 0x70c <__mulsf3_pse+0x64>
 722:	9e 3f       	cpi	r25, 0xFE	; 254
 724:	51 05       	cpc	r21, r1
 726:	70 f0       	brcs	.+28     	; 0x744 <__mulsf3_pse+0x9c>
 728:	60 cf       	rjmp	.-320    	; 0x5ea <__fp_inf>
 72a:	aa cf       	rjmp	.-172    	; 0x680 <__fp_szero>
 72c:	5f 3f       	cpi	r21, 0xFF	; 255
 72e:	ec f3       	brlt	.-6      	; 0x72a <__mulsf3_pse+0x82>
 730:	98 3e       	cpi	r25, 0xE8	; 232
 732:	dc f3       	brlt	.-10     	; 0x72a <__mulsf3_pse+0x82>
 734:	86 95       	lsr	r24
 736:	77 95       	ror	r23
 738:	67 95       	ror	r22
 73a:	b7 95       	ror	r27
 73c:	f7 95       	ror	r31
 73e:	e7 95       	ror	r30
 740:	9f 5f       	subi	r25, 0xFF	; 255
 742:	c1 f7       	brne	.-16     	; 0x734 <__mulsf3_pse+0x8c>
 744:	fe 2b       	or	r31, r30
 746:	88 0f       	add	r24, r24
 748:	91 1d       	adc	r25, r1
 74a:	96 95       	lsr	r25
 74c:	87 95       	ror	r24
 74e:	97 f9       	bld	r25, 7
 750:	08 95       	ret

00000752 <printf>:
 752:	cf 93       	push	r28
 754:	df 93       	push	r29
 756:	cd b7       	in	r28, 0x3d	; 61
 758:	de b7       	in	r29, 0x3e	; 62
 75a:	ae 01       	movw	r20, r28
 75c:	4b 5f       	subi	r20, 0xFB	; 251
 75e:	5f 4f       	sbci	r21, 0xFF	; 255
 760:	fa 01       	movw	r30, r20
 762:	61 91       	ld	r22, Z+
 764:	71 91       	ld	r23, Z+
 766:	af 01       	movw	r20, r30
 768:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__iob+0x2>
 76c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__iob+0x3>
 770:	36 d0       	rcall	.+108    	; 0x7de <vfprintf>
 772:	df 91       	pop	r29
 774:	cf 91       	pop	r28
 776:	08 95       	ret

00000778 <putchar>:
 778:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <__iob+0x2>
 77c:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <__iob+0x3>
 780:	41 c2       	rjmp	.+1154   	; 0xc04 <fputc>

00000782 <sprintf>:
 782:	0f 93       	push	r16
 784:	1f 93       	push	r17
 786:	cf 93       	push	r28
 788:	df 93       	push	r29
 78a:	cd b7       	in	r28, 0x3d	; 61
 78c:	de b7       	in	r29, 0x3e	; 62
 78e:	2e 97       	sbiw	r28, 0x0e	; 14
 790:	0f b6       	in	r0, 0x3f	; 63
 792:	f8 94       	cli
 794:	de bf       	out	0x3e, r29	; 62
 796:	0f be       	out	0x3f, r0	; 63
 798:	cd bf       	out	0x3d, r28	; 61
 79a:	0d 89       	ldd	r16, Y+21	; 0x15
 79c:	1e 89       	ldd	r17, Y+22	; 0x16
 79e:	86 e0       	ldi	r24, 0x06	; 6
 7a0:	8c 83       	std	Y+4, r24	; 0x04
 7a2:	1a 83       	std	Y+2, r17	; 0x02
 7a4:	09 83       	std	Y+1, r16	; 0x01
 7a6:	8f ef       	ldi	r24, 0xFF	; 255
 7a8:	9f e7       	ldi	r25, 0x7F	; 127
 7aa:	9e 83       	std	Y+6, r25	; 0x06
 7ac:	8d 83       	std	Y+5, r24	; 0x05
 7ae:	ae 01       	movw	r20, r28
 7b0:	47 5e       	subi	r20, 0xE7	; 231
 7b2:	5f 4f       	sbci	r21, 0xFF	; 255
 7b4:	6f 89       	ldd	r22, Y+23	; 0x17
 7b6:	78 8d       	ldd	r23, Y+24	; 0x18
 7b8:	ce 01       	movw	r24, r28
 7ba:	01 96       	adiw	r24, 0x01	; 1
 7bc:	10 d0       	rcall	.+32     	; 0x7de <vfprintf>
 7be:	ef 81       	ldd	r30, Y+7	; 0x07
 7c0:	f8 85       	ldd	r31, Y+8	; 0x08
 7c2:	e0 0f       	add	r30, r16
 7c4:	f1 1f       	adc	r31, r17
 7c6:	10 82       	st	Z, r1
 7c8:	2e 96       	adiw	r28, 0x0e	; 14
 7ca:	0f b6       	in	r0, 0x3f	; 63
 7cc:	f8 94       	cli
 7ce:	de bf       	out	0x3e, r29	; 62
 7d0:	0f be       	out	0x3f, r0	; 63
 7d2:	cd bf       	out	0x3d, r28	; 61
 7d4:	df 91       	pop	r29
 7d6:	cf 91       	pop	r28
 7d8:	1f 91       	pop	r17
 7da:	0f 91       	pop	r16
 7dc:	08 95       	ret

000007de <vfprintf>:
 7de:	2f 92       	push	r2
 7e0:	3f 92       	push	r3
 7e2:	4f 92       	push	r4
 7e4:	5f 92       	push	r5
 7e6:	6f 92       	push	r6
 7e8:	7f 92       	push	r7
 7ea:	8f 92       	push	r8
 7ec:	9f 92       	push	r9
 7ee:	af 92       	push	r10
 7f0:	bf 92       	push	r11
 7f2:	cf 92       	push	r12
 7f4:	df 92       	push	r13
 7f6:	ef 92       	push	r14
 7f8:	ff 92       	push	r15
 7fa:	0f 93       	push	r16
 7fc:	1f 93       	push	r17
 7fe:	cf 93       	push	r28
 800:	df 93       	push	r29
 802:	cd b7       	in	r28, 0x3d	; 61
 804:	de b7       	in	r29, 0x3e	; 62
 806:	2b 97       	sbiw	r28, 0x0b	; 11
 808:	0f b6       	in	r0, 0x3f	; 63
 80a:	f8 94       	cli
 80c:	de bf       	out	0x3e, r29	; 62
 80e:	0f be       	out	0x3f, r0	; 63
 810:	cd bf       	out	0x3d, r28	; 61
 812:	6c 01       	movw	r12, r24
 814:	7b 01       	movw	r14, r22
 816:	8a 01       	movw	r16, r20
 818:	fc 01       	movw	r30, r24
 81a:	17 82       	std	Z+7, r1	; 0x07
 81c:	16 82       	std	Z+6, r1	; 0x06
 81e:	83 81       	ldd	r24, Z+3	; 0x03
 820:	81 ff       	sbrs	r24, 1
 822:	bf c1       	rjmp	.+894    	; 0xba2 <vfprintf+0x3c4>
 824:	ce 01       	movw	r24, r28
 826:	01 96       	adiw	r24, 0x01	; 1
 828:	3c 01       	movw	r6, r24
 82a:	f6 01       	movw	r30, r12
 82c:	93 81       	ldd	r25, Z+3	; 0x03
 82e:	f7 01       	movw	r30, r14
 830:	93 fd       	sbrc	r25, 3
 832:	85 91       	lpm	r24, Z+
 834:	93 ff       	sbrs	r25, 3
 836:	81 91       	ld	r24, Z+
 838:	7f 01       	movw	r14, r30
 83a:	88 23       	and	r24, r24
 83c:	09 f4       	brne	.+2      	; 0x840 <vfprintf+0x62>
 83e:	ad c1       	rjmp	.+858    	; 0xb9a <vfprintf+0x3bc>
 840:	85 32       	cpi	r24, 0x25	; 37
 842:	39 f4       	brne	.+14     	; 0x852 <vfprintf+0x74>
 844:	93 fd       	sbrc	r25, 3
 846:	85 91       	lpm	r24, Z+
 848:	93 ff       	sbrs	r25, 3
 84a:	81 91       	ld	r24, Z+
 84c:	7f 01       	movw	r14, r30
 84e:	85 32       	cpi	r24, 0x25	; 37
 850:	21 f4       	brne	.+8      	; 0x85a <vfprintf+0x7c>
 852:	b6 01       	movw	r22, r12
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	d6 d1       	rcall	.+940    	; 0xc04 <fputc>
 858:	e8 cf       	rjmp	.-48     	; 0x82a <vfprintf+0x4c>
 85a:	91 2c       	mov	r9, r1
 85c:	21 2c       	mov	r2, r1
 85e:	31 2c       	mov	r3, r1
 860:	ff e1       	ldi	r31, 0x1F	; 31
 862:	f3 15       	cp	r31, r3
 864:	d8 f0       	brcs	.+54     	; 0x89c <vfprintf+0xbe>
 866:	8b 32       	cpi	r24, 0x2B	; 43
 868:	79 f0       	breq	.+30     	; 0x888 <vfprintf+0xaa>
 86a:	38 f4       	brcc	.+14     	; 0x87a <vfprintf+0x9c>
 86c:	80 32       	cpi	r24, 0x20	; 32
 86e:	79 f0       	breq	.+30     	; 0x88e <vfprintf+0xb0>
 870:	83 32       	cpi	r24, 0x23	; 35
 872:	a1 f4       	brne	.+40     	; 0x89c <vfprintf+0xbe>
 874:	23 2d       	mov	r18, r3
 876:	20 61       	ori	r18, 0x10	; 16
 878:	1d c0       	rjmp	.+58     	; 0x8b4 <vfprintf+0xd6>
 87a:	8d 32       	cpi	r24, 0x2D	; 45
 87c:	61 f0       	breq	.+24     	; 0x896 <vfprintf+0xb8>
 87e:	80 33       	cpi	r24, 0x30	; 48
 880:	69 f4       	brne	.+26     	; 0x89c <vfprintf+0xbe>
 882:	23 2d       	mov	r18, r3
 884:	21 60       	ori	r18, 0x01	; 1
 886:	16 c0       	rjmp	.+44     	; 0x8b4 <vfprintf+0xd6>
 888:	83 2d       	mov	r24, r3
 88a:	82 60       	ori	r24, 0x02	; 2
 88c:	38 2e       	mov	r3, r24
 88e:	e3 2d       	mov	r30, r3
 890:	e4 60       	ori	r30, 0x04	; 4
 892:	3e 2e       	mov	r3, r30
 894:	2a c0       	rjmp	.+84     	; 0x8ea <vfprintf+0x10c>
 896:	f3 2d       	mov	r31, r3
 898:	f8 60       	ori	r31, 0x08	; 8
 89a:	1d c0       	rjmp	.+58     	; 0x8d6 <vfprintf+0xf8>
 89c:	37 fc       	sbrc	r3, 7
 89e:	2d c0       	rjmp	.+90     	; 0x8fa <vfprintf+0x11c>
 8a0:	20 ed       	ldi	r18, 0xD0	; 208
 8a2:	28 0f       	add	r18, r24
 8a4:	2a 30       	cpi	r18, 0x0A	; 10
 8a6:	40 f0       	brcs	.+16     	; 0x8b8 <vfprintf+0xda>
 8a8:	8e 32       	cpi	r24, 0x2E	; 46
 8aa:	b9 f4       	brne	.+46     	; 0x8da <vfprintf+0xfc>
 8ac:	36 fc       	sbrc	r3, 6
 8ae:	75 c1       	rjmp	.+746    	; 0xb9a <vfprintf+0x3bc>
 8b0:	23 2d       	mov	r18, r3
 8b2:	20 64       	ori	r18, 0x40	; 64
 8b4:	32 2e       	mov	r3, r18
 8b6:	19 c0       	rjmp	.+50     	; 0x8ea <vfprintf+0x10c>
 8b8:	36 fe       	sbrs	r3, 6
 8ba:	06 c0       	rjmp	.+12     	; 0x8c8 <vfprintf+0xea>
 8bc:	8a e0       	ldi	r24, 0x0A	; 10
 8be:	98 9e       	mul	r9, r24
 8c0:	20 0d       	add	r18, r0
 8c2:	11 24       	eor	r1, r1
 8c4:	92 2e       	mov	r9, r18
 8c6:	11 c0       	rjmp	.+34     	; 0x8ea <vfprintf+0x10c>
 8c8:	ea e0       	ldi	r30, 0x0A	; 10
 8ca:	2e 9e       	mul	r2, r30
 8cc:	20 0d       	add	r18, r0
 8ce:	11 24       	eor	r1, r1
 8d0:	22 2e       	mov	r2, r18
 8d2:	f3 2d       	mov	r31, r3
 8d4:	f0 62       	ori	r31, 0x20	; 32
 8d6:	3f 2e       	mov	r3, r31
 8d8:	08 c0       	rjmp	.+16     	; 0x8ea <vfprintf+0x10c>
 8da:	8c 36       	cpi	r24, 0x6C	; 108
 8dc:	21 f4       	brne	.+8      	; 0x8e6 <vfprintf+0x108>
 8de:	83 2d       	mov	r24, r3
 8e0:	80 68       	ori	r24, 0x80	; 128
 8e2:	38 2e       	mov	r3, r24
 8e4:	02 c0       	rjmp	.+4      	; 0x8ea <vfprintf+0x10c>
 8e6:	88 36       	cpi	r24, 0x68	; 104
 8e8:	41 f4       	brne	.+16     	; 0x8fa <vfprintf+0x11c>
 8ea:	f7 01       	movw	r30, r14
 8ec:	93 fd       	sbrc	r25, 3
 8ee:	85 91       	lpm	r24, Z+
 8f0:	93 ff       	sbrs	r25, 3
 8f2:	81 91       	ld	r24, Z+
 8f4:	7f 01       	movw	r14, r30
 8f6:	81 11       	cpse	r24, r1
 8f8:	b3 cf       	rjmp	.-154    	; 0x860 <vfprintf+0x82>
 8fa:	98 2f       	mov	r25, r24
 8fc:	9f 7d       	andi	r25, 0xDF	; 223
 8fe:	95 54       	subi	r25, 0x45	; 69
 900:	93 30       	cpi	r25, 0x03	; 3
 902:	28 f4       	brcc	.+10     	; 0x90e <vfprintf+0x130>
 904:	0c 5f       	subi	r16, 0xFC	; 252
 906:	1f 4f       	sbci	r17, 0xFF	; 255
 908:	9f e3       	ldi	r25, 0x3F	; 63
 90a:	99 83       	std	Y+1, r25	; 0x01
 90c:	0d c0       	rjmp	.+26     	; 0x928 <vfprintf+0x14a>
 90e:	83 36       	cpi	r24, 0x63	; 99
 910:	31 f0       	breq	.+12     	; 0x91e <vfprintf+0x140>
 912:	83 37       	cpi	r24, 0x73	; 115
 914:	71 f0       	breq	.+28     	; 0x932 <vfprintf+0x154>
 916:	83 35       	cpi	r24, 0x53	; 83
 918:	09 f0       	breq	.+2      	; 0x91c <vfprintf+0x13e>
 91a:	55 c0       	rjmp	.+170    	; 0x9c6 <vfprintf+0x1e8>
 91c:	20 c0       	rjmp	.+64     	; 0x95e <vfprintf+0x180>
 91e:	f8 01       	movw	r30, r16
 920:	80 81       	ld	r24, Z
 922:	89 83       	std	Y+1, r24	; 0x01
 924:	0e 5f       	subi	r16, 0xFE	; 254
 926:	1f 4f       	sbci	r17, 0xFF	; 255
 928:	88 24       	eor	r8, r8
 92a:	83 94       	inc	r8
 92c:	91 2c       	mov	r9, r1
 92e:	53 01       	movw	r10, r6
 930:	12 c0       	rjmp	.+36     	; 0x956 <vfprintf+0x178>
 932:	28 01       	movw	r4, r16
 934:	f2 e0       	ldi	r31, 0x02	; 2
 936:	4f 0e       	add	r4, r31
 938:	51 1c       	adc	r5, r1
 93a:	f8 01       	movw	r30, r16
 93c:	a0 80       	ld	r10, Z
 93e:	b1 80       	ldd	r11, Z+1	; 0x01
 940:	36 fe       	sbrs	r3, 6
 942:	03 c0       	rjmp	.+6      	; 0x94a <vfprintf+0x16c>
 944:	69 2d       	mov	r22, r9
 946:	70 e0       	ldi	r23, 0x00	; 0
 948:	02 c0       	rjmp	.+4      	; 0x94e <vfprintf+0x170>
 94a:	6f ef       	ldi	r22, 0xFF	; 255
 94c:	7f ef       	ldi	r23, 0xFF	; 255
 94e:	c5 01       	movw	r24, r10
 950:	4e d1       	rcall	.+668    	; 0xbee <strnlen>
 952:	4c 01       	movw	r8, r24
 954:	82 01       	movw	r16, r4
 956:	f3 2d       	mov	r31, r3
 958:	ff 77       	andi	r31, 0x7F	; 127
 95a:	3f 2e       	mov	r3, r31
 95c:	15 c0       	rjmp	.+42     	; 0x988 <vfprintf+0x1aa>
 95e:	28 01       	movw	r4, r16
 960:	22 e0       	ldi	r18, 0x02	; 2
 962:	42 0e       	add	r4, r18
 964:	51 1c       	adc	r5, r1
 966:	f8 01       	movw	r30, r16
 968:	a0 80       	ld	r10, Z
 96a:	b1 80       	ldd	r11, Z+1	; 0x01
 96c:	36 fe       	sbrs	r3, 6
 96e:	03 c0       	rjmp	.+6      	; 0x976 <vfprintf+0x198>
 970:	69 2d       	mov	r22, r9
 972:	70 e0       	ldi	r23, 0x00	; 0
 974:	02 c0       	rjmp	.+4      	; 0x97a <vfprintf+0x19c>
 976:	6f ef       	ldi	r22, 0xFF	; 255
 978:	7f ef       	ldi	r23, 0xFF	; 255
 97a:	c5 01       	movw	r24, r10
 97c:	2d d1       	rcall	.+602    	; 0xbd8 <strnlen_P>
 97e:	4c 01       	movw	r8, r24
 980:	f3 2d       	mov	r31, r3
 982:	f0 68       	ori	r31, 0x80	; 128
 984:	3f 2e       	mov	r3, r31
 986:	82 01       	movw	r16, r4
 988:	33 fc       	sbrc	r3, 3
 98a:	19 c0       	rjmp	.+50     	; 0x9be <vfprintf+0x1e0>
 98c:	82 2d       	mov	r24, r2
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	88 16       	cp	r8, r24
 992:	99 06       	cpc	r9, r25
 994:	a0 f4       	brcc	.+40     	; 0x9be <vfprintf+0x1e0>
 996:	b6 01       	movw	r22, r12
 998:	80 e2       	ldi	r24, 0x20	; 32
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	33 d1       	rcall	.+614    	; 0xc04 <fputc>
 99e:	2a 94       	dec	r2
 9a0:	f5 cf       	rjmp	.-22     	; 0x98c <vfprintf+0x1ae>
 9a2:	f5 01       	movw	r30, r10
 9a4:	37 fc       	sbrc	r3, 7
 9a6:	85 91       	lpm	r24, Z+
 9a8:	37 fe       	sbrs	r3, 7
 9aa:	81 91       	ld	r24, Z+
 9ac:	5f 01       	movw	r10, r30
 9ae:	b6 01       	movw	r22, r12
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	28 d1       	rcall	.+592    	; 0xc04 <fputc>
 9b4:	21 10       	cpse	r2, r1
 9b6:	2a 94       	dec	r2
 9b8:	21 e0       	ldi	r18, 0x01	; 1
 9ba:	82 1a       	sub	r8, r18
 9bc:	91 08       	sbc	r9, r1
 9be:	81 14       	cp	r8, r1
 9c0:	91 04       	cpc	r9, r1
 9c2:	79 f7       	brne	.-34     	; 0x9a2 <vfprintf+0x1c4>
 9c4:	e1 c0       	rjmp	.+450    	; 0xb88 <vfprintf+0x3aa>
 9c6:	84 36       	cpi	r24, 0x64	; 100
 9c8:	11 f0       	breq	.+4      	; 0x9ce <vfprintf+0x1f0>
 9ca:	89 36       	cpi	r24, 0x69	; 105
 9cc:	39 f5       	brne	.+78     	; 0xa1c <vfprintf+0x23e>
 9ce:	f8 01       	movw	r30, r16
 9d0:	37 fe       	sbrs	r3, 7
 9d2:	07 c0       	rjmp	.+14     	; 0x9e2 <vfprintf+0x204>
 9d4:	60 81       	ld	r22, Z
 9d6:	71 81       	ldd	r23, Z+1	; 0x01
 9d8:	82 81       	ldd	r24, Z+2	; 0x02
 9da:	93 81       	ldd	r25, Z+3	; 0x03
 9dc:	0c 5f       	subi	r16, 0xFC	; 252
 9de:	1f 4f       	sbci	r17, 0xFF	; 255
 9e0:	08 c0       	rjmp	.+16     	; 0x9f2 <vfprintf+0x214>
 9e2:	60 81       	ld	r22, Z
 9e4:	71 81       	ldd	r23, Z+1	; 0x01
 9e6:	07 2e       	mov	r0, r23
 9e8:	00 0c       	add	r0, r0
 9ea:	88 0b       	sbc	r24, r24
 9ec:	99 0b       	sbc	r25, r25
 9ee:	0e 5f       	subi	r16, 0xFE	; 254
 9f0:	1f 4f       	sbci	r17, 0xFF	; 255
 9f2:	f3 2d       	mov	r31, r3
 9f4:	ff 76       	andi	r31, 0x6F	; 111
 9f6:	3f 2e       	mov	r3, r31
 9f8:	97 ff       	sbrs	r25, 7
 9fa:	09 c0       	rjmp	.+18     	; 0xa0e <vfprintf+0x230>
 9fc:	90 95       	com	r25
 9fe:	80 95       	com	r24
 a00:	70 95       	com	r23
 a02:	61 95       	neg	r22
 a04:	7f 4f       	sbci	r23, 0xFF	; 255
 a06:	8f 4f       	sbci	r24, 0xFF	; 255
 a08:	9f 4f       	sbci	r25, 0xFF	; 255
 a0a:	f0 68       	ori	r31, 0x80	; 128
 a0c:	3f 2e       	mov	r3, r31
 a0e:	2a e0       	ldi	r18, 0x0A	; 10
 a10:	30 e0       	ldi	r19, 0x00	; 0
 a12:	a3 01       	movw	r20, r6
 a14:	33 d1       	rcall	.+614    	; 0xc7c <__ultoa_invert>
 a16:	88 2e       	mov	r8, r24
 a18:	86 18       	sub	r8, r6
 a1a:	44 c0       	rjmp	.+136    	; 0xaa4 <vfprintf+0x2c6>
 a1c:	85 37       	cpi	r24, 0x75	; 117
 a1e:	31 f4       	brne	.+12     	; 0xa2c <vfprintf+0x24e>
 a20:	23 2d       	mov	r18, r3
 a22:	2f 7e       	andi	r18, 0xEF	; 239
 a24:	b2 2e       	mov	r11, r18
 a26:	2a e0       	ldi	r18, 0x0A	; 10
 a28:	30 e0       	ldi	r19, 0x00	; 0
 a2a:	25 c0       	rjmp	.+74     	; 0xa76 <vfprintf+0x298>
 a2c:	93 2d       	mov	r25, r3
 a2e:	99 7f       	andi	r25, 0xF9	; 249
 a30:	b9 2e       	mov	r11, r25
 a32:	8f 36       	cpi	r24, 0x6F	; 111
 a34:	c1 f0       	breq	.+48     	; 0xa66 <vfprintf+0x288>
 a36:	18 f4       	brcc	.+6      	; 0xa3e <vfprintf+0x260>
 a38:	88 35       	cpi	r24, 0x58	; 88
 a3a:	79 f0       	breq	.+30     	; 0xa5a <vfprintf+0x27c>
 a3c:	ae c0       	rjmp	.+348    	; 0xb9a <vfprintf+0x3bc>
 a3e:	80 37       	cpi	r24, 0x70	; 112
 a40:	19 f0       	breq	.+6      	; 0xa48 <vfprintf+0x26a>
 a42:	88 37       	cpi	r24, 0x78	; 120
 a44:	21 f0       	breq	.+8      	; 0xa4e <vfprintf+0x270>
 a46:	a9 c0       	rjmp	.+338    	; 0xb9a <vfprintf+0x3bc>
 a48:	e9 2f       	mov	r30, r25
 a4a:	e0 61       	ori	r30, 0x10	; 16
 a4c:	be 2e       	mov	r11, r30
 a4e:	b4 fe       	sbrs	r11, 4
 a50:	0d c0       	rjmp	.+26     	; 0xa6c <vfprintf+0x28e>
 a52:	fb 2d       	mov	r31, r11
 a54:	f4 60       	ori	r31, 0x04	; 4
 a56:	bf 2e       	mov	r11, r31
 a58:	09 c0       	rjmp	.+18     	; 0xa6c <vfprintf+0x28e>
 a5a:	34 fe       	sbrs	r3, 4
 a5c:	0a c0       	rjmp	.+20     	; 0xa72 <vfprintf+0x294>
 a5e:	29 2f       	mov	r18, r25
 a60:	26 60       	ori	r18, 0x06	; 6
 a62:	b2 2e       	mov	r11, r18
 a64:	06 c0       	rjmp	.+12     	; 0xa72 <vfprintf+0x294>
 a66:	28 e0       	ldi	r18, 0x08	; 8
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	05 c0       	rjmp	.+10     	; 0xa76 <vfprintf+0x298>
 a6c:	20 e1       	ldi	r18, 0x10	; 16
 a6e:	30 e0       	ldi	r19, 0x00	; 0
 a70:	02 c0       	rjmp	.+4      	; 0xa76 <vfprintf+0x298>
 a72:	20 e1       	ldi	r18, 0x10	; 16
 a74:	32 e0       	ldi	r19, 0x02	; 2
 a76:	f8 01       	movw	r30, r16
 a78:	b7 fe       	sbrs	r11, 7
 a7a:	07 c0       	rjmp	.+14     	; 0xa8a <vfprintf+0x2ac>
 a7c:	60 81       	ld	r22, Z
 a7e:	71 81       	ldd	r23, Z+1	; 0x01
 a80:	82 81       	ldd	r24, Z+2	; 0x02
 a82:	93 81       	ldd	r25, Z+3	; 0x03
 a84:	0c 5f       	subi	r16, 0xFC	; 252
 a86:	1f 4f       	sbci	r17, 0xFF	; 255
 a88:	06 c0       	rjmp	.+12     	; 0xa96 <vfprintf+0x2b8>
 a8a:	60 81       	ld	r22, Z
 a8c:	71 81       	ldd	r23, Z+1	; 0x01
 a8e:	80 e0       	ldi	r24, 0x00	; 0
 a90:	90 e0       	ldi	r25, 0x00	; 0
 a92:	0e 5f       	subi	r16, 0xFE	; 254
 a94:	1f 4f       	sbci	r17, 0xFF	; 255
 a96:	a3 01       	movw	r20, r6
 a98:	f1 d0       	rcall	.+482    	; 0xc7c <__ultoa_invert>
 a9a:	88 2e       	mov	r8, r24
 a9c:	86 18       	sub	r8, r6
 a9e:	fb 2d       	mov	r31, r11
 aa0:	ff 77       	andi	r31, 0x7F	; 127
 aa2:	3f 2e       	mov	r3, r31
 aa4:	36 fe       	sbrs	r3, 6
 aa6:	0d c0       	rjmp	.+26     	; 0xac2 <vfprintf+0x2e4>
 aa8:	23 2d       	mov	r18, r3
 aaa:	2e 7f       	andi	r18, 0xFE	; 254
 aac:	a2 2e       	mov	r10, r18
 aae:	89 14       	cp	r8, r9
 ab0:	58 f4       	brcc	.+22     	; 0xac8 <vfprintf+0x2ea>
 ab2:	34 fe       	sbrs	r3, 4
 ab4:	0b c0       	rjmp	.+22     	; 0xacc <vfprintf+0x2ee>
 ab6:	32 fc       	sbrc	r3, 2
 ab8:	09 c0       	rjmp	.+18     	; 0xacc <vfprintf+0x2ee>
 aba:	83 2d       	mov	r24, r3
 abc:	8e 7e       	andi	r24, 0xEE	; 238
 abe:	a8 2e       	mov	r10, r24
 ac0:	05 c0       	rjmp	.+10     	; 0xacc <vfprintf+0x2ee>
 ac2:	b8 2c       	mov	r11, r8
 ac4:	a3 2c       	mov	r10, r3
 ac6:	03 c0       	rjmp	.+6      	; 0xace <vfprintf+0x2f0>
 ac8:	b8 2c       	mov	r11, r8
 aca:	01 c0       	rjmp	.+2      	; 0xace <vfprintf+0x2f0>
 acc:	b9 2c       	mov	r11, r9
 ace:	a4 fe       	sbrs	r10, 4
 ad0:	0f c0       	rjmp	.+30     	; 0xaf0 <vfprintf+0x312>
 ad2:	fe 01       	movw	r30, r28
 ad4:	e8 0d       	add	r30, r8
 ad6:	f1 1d       	adc	r31, r1
 ad8:	80 81       	ld	r24, Z
 ada:	80 33       	cpi	r24, 0x30	; 48
 adc:	21 f4       	brne	.+8      	; 0xae6 <vfprintf+0x308>
 ade:	9a 2d       	mov	r25, r10
 ae0:	99 7e       	andi	r25, 0xE9	; 233
 ae2:	a9 2e       	mov	r10, r25
 ae4:	09 c0       	rjmp	.+18     	; 0xaf8 <vfprintf+0x31a>
 ae6:	a2 fe       	sbrs	r10, 2
 ae8:	06 c0       	rjmp	.+12     	; 0xaf6 <vfprintf+0x318>
 aea:	b3 94       	inc	r11
 aec:	b3 94       	inc	r11
 aee:	04 c0       	rjmp	.+8      	; 0xaf8 <vfprintf+0x31a>
 af0:	8a 2d       	mov	r24, r10
 af2:	86 78       	andi	r24, 0x86	; 134
 af4:	09 f0       	breq	.+2      	; 0xaf8 <vfprintf+0x31a>
 af6:	b3 94       	inc	r11
 af8:	a3 fc       	sbrc	r10, 3
 afa:	10 c0       	rjmp	.+32     	; 0xb1c <vfprintf+0x33e>
 afc:	a0 fe       	sbrs	r10, 0
 afe:	06 c0       	rjmp	.+12     	; 0xb0c <vfprintf+0x32e>
 b00:	b2 14       	cp	r11, r2
 b02:	80 f4       	brcc	.+32     	; 0xb24 <vfprintf+0x346>
 b04:	28 0c       	add	r2, r8
 b06:	92 2c       	mov	r9, r2
 b08:	9b 18       	sub	r9, r11
 b0a:	0d c0       	rjmp	.+26     	; 0xb26 <vfprintf+0x348>
 b0c:	b2 14       	cp	r11, r2
 b0e:	58 f4       	brcc	.+22     	; 0xb26 <vfprintf+0x348>
 b10:	b6 01       	movw	r22, r12
 b12:	80 e2       	ldi	r24, 0x20	; 32
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	76 d0       	rcall	.+236    	; 0xc04 <fputc>
 b18:	b3 94       	inc	r11
 b1a:	f8 cf       	rjmp	.-16     	; 0xb0c <vfprintf+0x32e>
 b1c:	b2 14       	cp	r11, r2
 b1e:	18 f4       	brcc	.+6      	; 0xb26 <vfprintf+0x348>
 b20:	2b 18       	sub	r2, r11
 b22:	02 c0       	rjmp	.+4      	; 0xb28 <vfprintf+0x34a>
 b24:	98 2c       	mov	r9, r8
 b26:	21 2c       	mov	r2, r1
 b28:	a4 fe       	sbrs	r10, 4
 b2a:	0f c0       	rjmp	.+30     	; 0xb4a <vfprintf+0x36c>
 b2c:	b6 01       	movw	r22, r12
 b2e:	80 e3       	ldi	r24, 0x30	; 48
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	68 d0       	rcall	.+208    	; 0xc04 <fputc>
 b34:	a2 fe       	sbrs	r10, 2
 b36:	16 c0       	rjmp	.+44     	; 0xb64 <vfprintf+0x386>
 b38:	a1 fc       	sbrc	r10, 1
 b3a:	03 c0       	rjmp	.+6      	; 0xb42 <vfprintf+0x364>
 b3c:	88 e7       	ldi	r24, 0x78	; 120
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	02 c0       	rjmp	.+4      	; 0xb46 <vfprintf+0x368>
 b42:	88 e5       	ldi	r24, 0x58	; 88
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	b6 01       	movw	r22, r12
 b48:	0c c0       	rjmp	.+24     	; 0xb62 <vfprintf+0x384>
 b4a:	8a 2d       	mov	r24, r10
 b4c:	86 78       	andi	r24, 0x86	; 134
 b4e:	51 f0       	breq	.+20     	; 0xb64 <vfprintf+0x386>
 b50:	a1 fe       	sbrs	r10, 1
 b52:	02 c0       	rjmp	.+4      	; 0xb58 <vfprintf+0x37a>
 b54:	8b e2       	ldi	r24, 0x2B	; 43
 b56:	01 c0       	rjmp	.+2      	; 0xb5a <vfprintf+0x37c>
 b58:	80 e2       	ldi	r24, 0x20	; 32
 b5a:	a7 fc       	sbrc	r10, 7
 b5c:	8d e2       	ldi	r24, 0x2D	; 45
 b5e:	b6 01       	movw	r22, r12
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	50 d0       	rcall	.+160    	; 0xc04 <fputc>
 b64:	89 14       	cp	r8, r9
 b66:	30 f4       	brcc	.+12     	; 0xb74 <vfprintf+0x396>
 b68:	b6 01       	movw	r22, r12
 b6a:	80 e3       	ldi	r24, 0x30	; 48
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	4a d0       	rcall	.+148    	; 0xc04 <fputc>
 b70:	9a 94       	dec	r9
 b72:	f8 cf       	rjmp	.-16     	; 0xb64 <vfprintf+0x386>
 b74:	8a 94       	dec	r8
 b76:	f3 01       	movw	r30, r6
 b78:	e8 0d       	add	r30, r8
 b7a:	f1 1d       	adc	r31, r1
 b7c:	80 81       	ld	r24, Z
 b7e:	b6 01       	movw	r22, r12
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	40 d0       	rcall	.+128    	; 0xc04 <fputc>
 b84:	81 10       	cpse	r8, r1
 b86:	f6 cf       	rjmp	.-20     	; 0xb74 <vfprintf+0x396>
 b88:	22 20       	and	r2, r2
 b8a:	09 f4       	brne	.+2      	; 0xb8e <vfprintf+0x3b0>
 b8c:	4e ce       	rjmp	.-868    	; 0x82a <vfprintf+0x4c>
 b8e:	b6 01       	movw	r22, r12
 b90:	80 e2       	ldi	r24, 0x20	; 32
 b92:	90 e0       	ldi	r25, 0x00	; 0
 b94:	37 d0       	rcall	.+110    	; 0xc04 <fputc>
 b96:	2a 94       	dec	r2
 b98:	f7 cf       	rjmp	.-18     	; 0xb88 <vfprintf+0x3aa>
 b9a:	f6 01       	movw	r30, r12
 b9c:	86 81       	ldd	r24, Z+6	; 0x06
 b9e:	97 81       	ldd	r25, Z+7	; 0x07
 ba0:	02 c0       	rjmp	.+4      	; 0xba6 <vfprintf+0x3c8>
 ba2:	8f ef       	ldi	r24, 0xFF	; 255
 ba4:	9f ef       	ldi	r25, 0xFF	; 255
 ba6:	2b 96       	adiw	r28, 0x0b	; 11
 ba8:	0f b6       	in	r0, 0x3f	; 63
 baa:	f8 94       	cli
 bac:	de bf       	out	0x3e, r29	; 62
 bae:	0f be       	out	0x3f, r0	; 63
 bb0:	cd bf       	out	0x3d, r28	; 61
 bb2:	df 91       	pop	r29
 bb4:	cf 91       	pop	r28
 bb6:	1f 91       	pop	r17
 bb8:	0f 91       	pop	r16
 bba:	ff 90       	pop	r15
 bbc:	ef 90       	pop	r14
 bbe:	df 90       	pop	r13
 bc0:	cf 90       	pop	r12
 bc2:	bf 90       	pop	r11
 bc4:	af 90       	pop	r10
 bc6:	9f 90       	pop	r9
 bc8:	8f 90       	pop	r8
 bca:	7f 90       	pop	r7
 bcc:	6f 90       	pop	r6
 bce:	5f 90       	pop	r5
 bd0:	4f 90       	pop	r4
 bd2:	3f 90       	pop	r3
 bd4:	2f 90       	pop	r2
 bd6:	08 95       	ret

00000bd8 <strnlen_P>:
 bd8:	fc 01       	movw	r30, r24
 bda:	05 90       	lpm	r0, Z+
 bdc:	61 50       	subi	r22, 0x01	; 1
 bde:	70 40       	sbci	r23, 0x00	; 0
 be0:	01 10       	cpse	r0, r1
 be2:	d8 f7       	brcc	.-10     	; 0xbda <strnlen_P+0x2>
 be4:	80 95       	com	r24
 be6:	90 95       	com	r25
 be8:	8e 0f       	add	r24, r30
 bea:	9f 1f       	adc	r25, r31
 bec:	08 95       	ret

00000bee <strnlen>:
 bee:	fc 01       	movw	r30, r24
 bf0:	61 50       	subi	r22, 0x01	; 1
 bf2:	70 40       	sbci	r23, 0x00	; 0
 bf4:	01 90       	ld	r0, Z+
 bf6:	01 10       	cpse	r0, r1
 bf8:	d8 f7       	brcc	.-10     	; 0xbf0 <strnlen+0x2>
 bfa:	80 95       	com	r24
 bfc:	90 95       	com	r25
 bfe:	8e 0f       	add	r24, r30
 c00:	9f 1f       	adc	r25, r31
 c02:	08 95       	ret

00000c04 <fputc>:
 c04:	0f 93       	push	r16
 c06:	1f 93       	push	r17
 c08:	cf 93       	push	r28
 c0a:	df 93       	push	r29
 c0c:	fb 01       	movw	r30, r22
 c0e:	23 81       	ldd	r18, Z+3	; 0x03
 c10:	21 fd       	sbrc	r18, 1
 c12:	03 c0       	rjmp	.+6      	; 0xc1a <fputc+0x16>
 c14:	8f ef       	ldi	r24, 0xFF	; 255
 c16:	9f ef       	ldi	r25, 0xFF	; 255
 c18:	2c c0       	rjmp	.+88     	; 0xc72 <fputc+0x6e>
 c1a:	22 ff       	sbrs	r18, 2
 c1c:	16 c0       	rjmp	.+44     	; 0xc4a <fputc+0x46>
 c1e:	46 81       	ldd	r20, Z+6	; 0x06
 c20:	57 81       	ldd	r21, Z+7	; 0x07
 c22:	24 81       	ldd	r18, Z+4	; 0x04
 c24:	35 81       	ldd	r19, Z+5	; 0x05
 c26:	42 17       	cp	r20, r18
 c28:	53 07       	cpc	r21, r19
 c2a:	44 f4       	brge	.+16     	; 0xc3c <fputc+0x38>
 c2c:	a0 81       	ld	r26, Z
 c2e:	b1 81       	ldd	r27, Z+1	; 0x01
 c30:	9d 01       	movw	r18, r26
 c32:	2f 5f       	subi	r18, 0xFF	; 255
 c34:	3f 4f       	sbci	r19, 0xFF	; 255
 c36:	31 83       	std	Z+1, r19	; 0x01
 c38:	20 83       	st	Z, r18
 c3a:	8c 93       	st	X, r24
 c3c:	26 81       	ldd	r18, Z+6	; 0x06
 c3e:	37 81       	ldd	r19, Z+7	; 0x07
 c40:	2f 5f       	subi	r18, 0xFF	; 255
 c42:	3f 4f       	sbci	r19, 0xFF	; 255
 c44:	37 83       	std	Z+7, r19	; 0x07
 c46:	26 83       	std	Z+6, r18	; 0x06
 c48:	14 c0       	rjmp	.+40     	; 0xc72 <fputc+0x6e>
 c4a:	8b 01       	movw	r16, r22
 c4c:	ec 01       	movw	r28, r24
 c4e:	fb 01       	movw	r30, r22
 c50:	00 84       	ldd	r0, Z+8	; 0x08
 c52:	f1 85       	ldd	r31, Z+9	; 0x09
 c54:	e0 2d       	mov	r30, r0
 c56:	09 95       	icall
 c58:	89 2b       	or	r24, r25
 c5a:	e1 f6       	brne	.-72     	; 0xc14 <fputc+0x10>
 c5c:	d8 01       	movw	r26, r16
 c5e:	16 96       	adiw	r26, 0x06	; 6
 c60:	8d 91       	ld	r24, X+
 c62:	9c 91       	ld	r25, X
 c64:	17 97       	sbiw	r26, 0x07	; 7
 c66:	01 96       	adiw	r24, 0x01	; 1
 c68:	17 96       	adiw	r26, 0x07	; 7
 c6a:	9c 93       	st	X, r25
 c6c:	8e 93       	st	-X, r24
 c6e:	16 97       	sbiw	r26, 0x06	; 6
 c70:	ce 01       	movw	r24, r28
 c72:	df 91       	pop	r29
 c74:	cf 91       	pop	r28
 c76:	1f 91       	pop	r17
 c78:	0f 91       	pop	r16
 c7a:	08 95       	ret

00000c7c <__ultoa_invert>:
 c7c:	fa 01       	movw	r30, r20
 c7e:	aa 27       	eor	r26, r26
 c80:	28 30       	cpi	r18, 0x08	; 8
 c82:	51 f1       	breq	.+84     	; 0xcd8 <__ultoa_invert+0x5c>
 c84:	20 31       	cpi	r18, 0x10	; 16
 c86:	81 f1       	breq	.+96     	; 0xce8 <__ultoa_invert+0x6c>
 c88:	e8 94       	clt
 c8a:	6f 93       	push	r22
 c8c:	6e 7f       	andi	r22, 0xFE	; 254
 c8e:	6e 5f       	subi	r22, 0xFE	; 254
 c90:	7f 4f       	sbci	r23, 0xFF	; 255
 c92:	8f 4f       	sbci	r24, 0xFF	; 255
 c94:	9f 4f       	sbci	r25, 0xFF	; 255
 c96:	af 4f       	sbci	r26, 0xFF	; 255
 c98:	b1 e0       	ldi	r27, 0x01	; 1
 c9a:	3e d0       	rcall	.+124    	; 0xd18 <__ultoa_invert+0x9c>
 c9c:	b4 e0       	ldi	r27, 0x04	; 4
 c9e:	3c d0       	rcall	.+120    	; 0xd18 <__ultoa_invert+0x9c>
 ca0:	67 0f       	add	r22, r23
 ca2:	78 1f       	adc	r23, r24
 ca4:	89 1f       	adc	r24, r25
 ca6:	9a 1f       	adc	r25, r26
 ca8:	a1 1d       	adc	r26, r1
 caa:	68 0f       	add	r22, r24
 cac:	79 1f       	adc	r23, r25
 cae:	8a 1f       	adc	r24, r26
 cb0:	91 1d       	adc	r25, r1
 cb2:	a1 1d       	adc	r26, r1
 cb4:	6a 0f       	add	r22, r26
 cb6:	71 1d       	adc	r23, r1
 cb8:	81 1d       	adc	r24, r1
 cba:	91 1d       	adc	r25, r1
 cbc:	a1 1d       	adc	r26, r1
 cbe:	20 d0       	rcall	.+64     	; 0xd00 <__ultoa_invert+0x84>
 cc0:	09 f4       	brne	.+2      	; 0xcc4 <__ultoa_invert+0x48>
 cc2:	68 94       	set
 cc4:	3f 91       	pop	r19
 cc6:	2a e0       	ldi	r18, 0x0A	; 10
 cc8:	26 9f       	mul	r18, r22
 cca:	11 24       	eor	r1, r1
 ccc:	30 19       	sub	r19, r0
 cce:	30 5d       	subi	r19, 0xD0	; 208
 cd0:	31 93       	st	Z+, r19
 cd2:	de f6       	brtc	.-74     	; 0xc8a <__ultoa_invert+0xe>
 cd4:	cf 01       	movw	r24, r30
 cd6:	08 95       	ret
 cd8:	46 2f       	mov	r20, r22
 cda:	47 70       	andi	r20, 0x07	; 7
 cdc:	40 5d       	subi	r20, 0xD0	; 208
 cde:	41 93       	st	Z+, r20
 ce0:	b3 e0       	ldi	r27, 0x03	; 3
 ce2:	0f d0       	rcall	.+30     	; 0xd02 <__ultoa_invert+0x86>
 ce4:	c9 f7       	brne	.-14     	; 0xcd8 <__ultoa_invert+0x5c>
 ce6:	f6 cf       	rjmp	.-20     	; 0xcd4 <__ultoa_invert+0x58>
 ce8:	46 2f       	mov	r20, r22
 cea:	4f 70       	andi	r20, 0x0F	; 15
 cec:	40 5d       	subi	r20, 0xD0	; 208
 cee:	4a 33       	cpi	r20, 0x3A	; 58
 cf0:	18 f0       	brcs	.+6      	; 0xcf8 <__ultoa_invert+0x7c>
 cf2:	49 5d       	subi	r20, 0xD9	; 217
 cf4:	31 fd       	sbrc	r19, 1
 cf6:	40 52       	subi	r20, 0x20	; 32
 cf8:	41 93       	st	Z+, r20
 cfa:	02 d0       	rcall	.+4      	; 0xd00 <__ultoa_invert+0x84>
 cfc:	a9 f7       	brne	.-22     	; 0xce8 <__ultoa_invert+0x6c>
 cfe:	ea cf       	rjmp	.-44     	; 0xcd4 <__ultoa_invert+0x58>
 d00:	b4 e0       	ldi	r27, 0x04	; 4
 d02:	a6 95       	lsr	r26
 d04:	97 95       	ror	r25
 d06:	87 95       	ror	r24
 d08:	77 95       	ror	r23
 d0a:	67 95       	ror	r22
 d0c:	ba 95       	dec	r27
 d0e:	c9 f7       	brne	.-14     	; 0xd02 <__ultoa_invert+0x86>
 d10:	00 97       	sbiw	r24, 0x00	; 0
 d12:	61 05       	cpc	r22, r1
 d14:	71 05       	cpc	r23, r1
 d16:	08 95       	ret
 d18:	9b 01       	movw	r18, r22
 d1a:	ac 01       	movw	r20, r24
 d1c:	0a 2e       	mov	r0, r26
 d1e:	06 94       	lsr	r0
 d20:	57 95       	ror	r21
 d22:	47 95       	ror	r20
 d24:	37 95       	ror	r19
 d26:	27 95       	ror	r18
 d28:	ba 95       	dec	r27
 d2a:	c9 f7       	brne	.-14     	; 0xd1e <__ultoa_invert+0xa2>
 d2c:	62 0f       	add	r22, r18
 d2e:	73 1f       	adc	r23, r19
 d30:	84 1f       	adc	r24, r20
 d32:	95 1f       	adc	r25, r21
 d34:	a0 1d       	adc	r26, r0
 d36:	08 95       	ret

00000d38 <_exit>:
 d38:	f8 94       	cli

00000d3a <__stop_program>:
 d3a:	ff cf       	rjmp	.-2      	; 0xd3a <__stop_program>
